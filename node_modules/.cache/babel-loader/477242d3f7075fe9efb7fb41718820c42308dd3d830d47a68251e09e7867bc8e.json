{"ast":null,"code":"var INUMBER = 'INUMBER';\nvar IOP1 = 'IOP1';\nvar IOP2 = 'IOP2';\nvar IOP3 = 'IOP3';\nvar IVAR = 'IVAR';\nvar IVARNAME = 'IVARNAME';\nvar IFUNCALL = 'IFUNCALL';\nvar IFUNDEF = 'IFUNDEF';\nvar IEXPR = 'IEXPR';\nvar IEXPREVAL = 'IEXPREVAL';\nvar IMEMBER = 'IMEMBER';\nvar IENDSTATEMENT = 'IENDSTATEMENT';\nvar IARRAY = 'IARRAY';\nfunction Instruction(type, value) {\n  this.type = type;\n  this.value = value !== undefined && value !== null ? value : 0;\n}\nInstruction.prototype.toString = function () {\n  switch (this.type) {\n    case INUMBER:\n    case IOP1:\n    case IOP2:\n    case IOP3:\n    case IVAR:\n    case IVARNAME:\n    case IENDSTATEMENT:\n      return this.value;\n    case IFUNCALL:\n      return 'CALL ' + this.value;\n    case IFUNDEF:\n      return 'DEF ' + this.value;\n    case IARRAY:\n      return 'ARRAY ' + this.value;\n    case IMEMBER:\n      return '.' + this.value;\n    default:\n      return 'Invalid Instruction';\n  }\n};\nfunction unaryInstruction(value) {\n  return new Instruction(IOP1, value);\n}\nfunction binaryInstruction(value) {\n  return new Instruction(IOP2, value);\n}\nfunction ternaryInstruction(value) {\n  return new Instruction(IOP3, value);\n}\nfunction simplify(tokens, unaryOps, binaryOps, ternaryOps, values) {\n  var nstack = [];\n  var newexpression = [];\n  var n1, n2, n3;\n  var f;\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER || type === IVARNAME) {\n      if (Array.isArray(item.value)) {\n        nstack.push.apply(nstack, simplify(item.value.map(function (x) {\n          return new Instruction(INUMBER, x);\n        }).concat(new Instruction(IARRAY, item.value.length)), unaryOps, binaryOps, ternaryOps, values));\n      } else {\n        nstack.push(item);\n      }\n    } else if (type === IVAR && values.hasOwnProperty(item.value)) {\n      item = new Instruction(INUMBER, values[item.value]);\n      nstack.push(item);\n    } else if (type === IOP2 && nstack.length > 1) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = binaryOps[item.value];\n      item = new Instruction(INUMBER, f(n1.value, n2.value));\n      nstack.push(item);\n    } else if (type === IOP3 && nstack.length > 2) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === '?') {\n        nstack.push(n1.value ? n2.value : n3.value);\n      } else {\n        f = ternaryOps[item.value];\n        item = new Instruction(INUMBER, f(n1.value, n2.value, n3.value));\n        nstack.push(item);\n      }\n    } else if (type === IOP1 && nstack.length > 0) {\n      n1 = nstack.pop();\n      f = unaryOps[item.value];\n      item = new Instruction(INUMBER, f(n1.value));\n      nstack.push(item);\n    } else if (type === IEXPR) {\n      while (nstack.length > 0) {\n        newexpression.push(nstack.shift());\n      }\n      newexpression.push(new Instruction(IEXPR, simplify(item.value, unaryOps, binaryOps, ternaryOps, values)));\n    } else if (type === IMEMBER && nstack.length > 0) {\n      n1 = nstack.pop();\n      nstack.push(new Instruction(INUMBER, n1.value[item.value]));\n    } /* else if (type === IARRAY && nstack.length >= item.value) {\n      var length = item.value;\n      while (length-- > 0) {\n        newexpression.push(nstack.pop());\n      }\n      newexpression.push(new Instruction(IARRAY, item.value));\n      } */else {\n      while (nstack.length > 0) {\n        newexpression.push(nstack.shift());\n      }\n      newexpression.push(item);\n    }\n  }\n  while (nstack.length > 0) {\n    newexpression.push(nstack.shift());\n  }\n  return newexpression;\n}\nfunction substitute(tokens, variable, expr) {\n  var newexpression = [];\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === IVAR && item.value === variable) {\n      for (var j = 0; j < expr.tokens.length; j++) {\n        var expritem = expr.tokens[j];\n        var replitem;\n        if (expritem.type === IOP1) {\n          replitem = unaryInstruction(expritem.value);\n        } else if (expritem.type === IOP2) {\n          replitem = binaryInstruction(expritem.value);\n        } else if (expritem.type === IOP3) {\n          replitem = ternaryInstruction(expritem.value);\n        } else {\n          replitem = new Instruction(expritem.type, expritem.value);\n        }\n        newexpression.push(replitem);\n      }\n    } else if (type === IEXPR) {\n      newexpression.push(new Instruction(IEXPR, substitute(item.value, variable, expr)));\n    } else {\n      newexpression.push(item);\n    }\n  }\n  return newexpression;\n}\nfunction evaluate(tokens, expr, values) {\n  var nstack = [];\n  var n1, n2, n3;\n  var f, args, argCount;\n  if (isExpressionEvaluator(tokens)) {\n    return resolveExpression(tokens, values);\n  }\n  var numTokens = tokens.length;\n  for (var i = 0; i < numTokens; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER || type === IVARNAME) {\n      nstack.push(item.value);\n    } else if (type === IOP2) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === 'and') {\n        nstack.push(n1 ? !!evaluate(n2, expr, values) : false);\n      } else if (item.value === 'or') {\n        nstack.push(n1 ? true : !!evaluate(n2, expr, values));\n      } else if (item.value === '=') {\n        f = expr.binaryOps[item.value];\n        nstack.push(f(n1, evaluate(n2, expr, values), values));\n      } else {\n        f = expr.binaryOps[item.value];\n        nstack.push(f(resolveExpression(n1, values), resolveExpression(n2, values)));\n      }\n    } else if (type === IOP3) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === '?') {\n        nstack.push(evaluate(n1 ? n2 : n3, expr, values));\n      } else {\n        f = expr.ternaryOps[item.value];\n        nstack.push(f(resolveExpression(n1, values), resolveExpression(n2, values), resolveExpression(n3, values)));\n      }\n    } else if (type === IVAR) {\n      if (item.value in expr.functions) {\n        nstack.push(expr.functions[item.value]);\n      } else if (item.value in expr.unaryOps && expr.parser.isOperatorEnabled(item.value)) {\n        nstack.push(expr.unaryOps[item.value]);\n      } else {\n        var v = values[item.value];\n        if (v !== undefined) {\n          nstack.push(v);\n        } else {\n          throw new Error('undefined variable: ' + item.value);\n        }\n      }\n    } else if (type === IOP1) {\n      n1 = nstack.pop();\n      f = expr.unaryOps[item.value];\n      nstack.push(f(resolveExpression(n1, values)));\n    } else if (type === IFUNCALL) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(resolveExpression(nstack.pop(), values));\n      }\n      f = nstack.pop();\n      if (f.apply && f.call) {\n        nstack.push(f.apply(undefined, args));\n      } else {\n        throw new Error(f + ' is not a function');\n      }\n    } else if (type === IFUNDEF) {\n      // Create closure to keep references to arguments and expression\n      nstack.push(function () {\n        var n2 = nstack.pop();\n        var args = [];\n        var argCount = item.value;\n        while (argCount-- > 0) {\n          args.unshift(nstack.pop());\n        }\n        var n1 = nstack.pop();\n        var f = function () {\n          var scope = Object.assign({}, values);\n          for (var i = 0, len = args.length; i < len; i++) {\n            scope[args[i]] = arguments[i];\n          }\n          return evaluate(n2, expr, scope);\n        };\n        // f.name = n1\n        Object.defineProperty(f, 'name', {\n          value: n1,\n          writable: false\n        });\n        values[n1] = f;\n        return f;\n      }());\n    } else if (type === IEXPR) {\n      nstack.push(createExpressionEvaluator(item, expr));\n    } else if (type === IEXPREVAL) {\n      nstack.push(item);\n    } else if (type === IMEMBER) {\n      n1 = nstack.pop();\n      nstack.push(n1[item.value]);\n    } else if (type === IENDSTATEMENT) {\n      nstack.pop();\n    } else if (type === IARRAY) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      nstack.push(args);\n    } else {\n      throw new Error('invalid Expression');\n    }\n  }\n  if (nstack.length > 1) {\n    throw new Error('invalid Expression (parity)');\n  }\n  // Explicitly return zero to avoid test issues caused by -0\n  return nstack[0] === 0 ? 0 : resolveExpression(nstack[0], values);\n}\nfunction createExpressionEvaluator(token, expr, values) {\n  if (isExpressionEvaluator(token)) return token;\n  return {\n    type: IEXPREVAL,\n    value: function (scope) {\n      return evaluate(token.value, expr, scope);\n    }\n  };\n}\nfunction isExpressionEvaluator(n) {\n  return n && n.type === IEXPREVAL;\n}\nfunction resolveExpression(n, values) {\n  return isExpressionEvaluator(n) ? n.value(values) : n;\n}\nfunction expressionToString(tokens, toJS) {\n  var nstack = [];\n  var n1, n2, n3;\n  var f, args, argCount;\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER) {\n      if (typeof item.value === 'number' && item.value < 0) {\n        nstack.push('(' + item.value + ')');\n      } else if (Array.isArray(item.value)) {\n        nstack.push('[' + item.value.map(escapeValue).join(', ') + ']');\n      } else {\n        nstack.push(escapeValue(item.value));\n      }\n    } else if (type === IOP2) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = item.value;\n      if (toJS) {\n        if (f === '^') {\n          nstack.push('Math.pow(' + n1 + ', ' + n2 + ')');\n        } else if (f === 'and') {\n          nstack.push('(!!' + n1 + ' && !!' + n2 + ')');\n        } else if (f === 'or') {\n          nstack.push('(!!' + n1 + ' || !!' + n2 + ')');\n        } else if (f === '||') {\n          nstack.push('(function(a,b){ return Array.isArray(a) && Array.isArray(b) ? a.concat(b) : String(a) + String(b); }((' + n1 + '),(' + n2 + ')))');\n        } else if (f === '==') {\n          nstack.push('(' + n1 + ' === ' + n2 + ')');\n        } else if (f === '!=') {\n          nstack.push('(' + n1 + ' !== ' + n2 + ')');\n        } else if (f === '[') {\n          nstack.push(n1 + '[(' + n2 + ') | 0]');\n        } else {\n          nstack.push('(' + n1 + ' ' + f + ' ' + n2 + ')');\n        }\n      } else {\n        if (f === '[') {\n          nstack.push(n1 + '[' + n2 + ']');\n        } else {\n          nstack.push('(' + n1 + ' ' + f + ' ' + n2 + ')');\n        }\n      }\n    } else if (type === IOP3) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = item.value;\n      if (f === '?') {\n        nstack.push('(' + n1 + ' ? ' + n2 + ' : ' + n3 + ')');\n      } else {\n        throw new Error('invalid Expression');\n      }\n    } else if (type === IVAR || type === IVARNAME) {\n      nstack.push(item.value);\n    } else if (type === IOP1) {\n      n1 = nstack.pop();\n      f = item.value;\n      if (f === '-' || f === '+') {\n        nstack.push('(' + f + n1 + ')');\n      } else if (toJS) {\n        if (f === 'not') {\n          nstack.push('(' + '!' + n1 + ')');\n        } else if (f === '!') {\n          nstack.push('fac(' + n1 + ')');\n        } else {\n          nstack.push(f + '(' + n1 + ')');\n        }\n      } else if (f === '!') {\n        nstack.push('(' + n1 + '!)');\n      } else {\n        nstack.push('(' + f + ' ' + n1 + ')');\n      }\n    } else if (type === IFUNCALL) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      f = nstack.pop();\n      nstack.push(f + '(' + args.join(', ') + ')');\n    } else if (type === IFUNDEF) {\n      n2 = nstack.pop();\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      n1 = nstack.pop();\n      if (toJS) {\n        nstack.push('(' + n1 + ' = function(' + args.join(', ') + ') { return ' + n2 + ' })');\n      } else {\n        nstack.push('(' + n1 + '(' + args.join(', ') + ') = ' + n2 + ')');\n      }\n    } else if (type === IMEMBER) {\n      n1 = nstack.pop();\n      nstack.push(n1 + '.' + item.value);\n    } else if (type === IARRAY) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      nstack.push('[' + args.join(', ') + ']');\n    } else if (type === IEXPR) {\n      nstack.push('(' + expressionToString(item.value, toJS) + ')');\n    } else if (type === IENDSTATEMENT) ;else {\n      throw new Error('invalid Expression');\n    }\n  }\n  if (nstack.length > 1) {\n    if (toJS) {\n      nstack = [nstack.join(',')];\n    } else {\n      nstack = [nstack.join(';')];\n    }\n  }\n  return String(nstack[0]);\n}\nfunction escapeValue(v) {\n  if (typeof v === 'string') {\n    return JSON.stringify(v).replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n  }\n  return v;\n}\nfunction contains(array, obj) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction getSymbols(tokens, symbols, options) {\n  options = options || {};\n  var withMembers = !!options.withMembers;\n  var prevVar = null;\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    if (item.type === IVAR || item.type === IVARNAME) {\n      if (!withMembers && !contains(symbols, item.value)) {\n        symbols.push(item.value);\n      } else if (prevVar !== null) {\n        if (!contains(symbols, prevVar)) {\n          symbols.push(prevVar);\n        }\n        prevVar = item.value;\n      } else {\n        prevVar = item.value;\n      }\n    } else if (item.type === IMEMBER && withMembers && prevVar !== null) {\n      prevVar += '.' + item.value;\n    } else if (item.type === IEXPR) {\n      getSymbols(item.value, symbols, options);\n    } else if (prevVar !== null) {\n      if (!contains(symbols, prevVar)) {\n        symbols.push(prevVar);\n      }\n      prevVar = null;\n    }\n  }\n  if (prevVar !== null && !contains(symbols, prevVar)) {\n    symbols.push(prevVar);\n  }\n}\nfunction Expression(tokens, parser) {\n  this.tokens = tokens;\n  this.parser = parser;\n  this.unaryOps = parser.unaryOps;\n  this.binaryOps = parser.binaryOps;\n  this.ternaryOps = parser.ternaryOps;\n  this.functions = parser.functions;\n}\nExpression.prototype.simplify = function (values) {\n  values = values || {};\n  return new Expression(simplify(this.tokens, this.unaryOps, this.binaryOps, this.ternaryOps, values), this.parser);\n};\nExpression.prototype.substitute = function (variable, expr) {\n  if (!(expr instanceof Expression)) {\n    expr = this.parser.parse(String(expr));\n  }\n  return new Expression(substitute(this.tokens, variable, expr), this.parser);\n};\nExpression.prototype.evaluate = function (values) {\n  values = values || {};\n  return evaluate(this.tokens, this, values);\n};\nExpression.prototype.toString = function () {\n  return expressionToString(this.tokens, false);\n};\nExpression.prototype.symbols = function (options) {\n  options = options || {};\n  var vars = [];\n  getSymbols(this.tokens, vars, options);\n  return vars;\n};\nExpression.prototype.variables = function (options) {\n  options = options || {};\n  var vars = [];\n  getSymbols(this.tokens, vars, options);\n  var functions = this.functions;\n  return vars.filter(function (name) {\n    return !(name in functions);\n  });\n};\nExpression.prototype.toJSFunction = function (param, variables) {\n  var expr = this;\n  var f = new Function(param, 'with(this.functions) with (this.ternaryOps) with (this.binaryOps) with (this.unaryOps) { return ' + expressionToString(this.simplify(variables).tokens, true) + '; }'); // eslint-disable-line no-new-func\n  return function () {\n    return f.apply(expr, arguments);\n  };\n};\nvar TEOF = 'TEOF';\nvar TOP = 'TOP';\nvar TNUMBER = 'TNUMBER';\nvar TSTRING = 'TSTRING';\nvar TPAREN = 'TPAREN';\nvar TBRACKET = 'TBRACKET';\nvar TCOMMA = 'TCOMMA';\nvar TNAME = 'TNAME';\nvar TSEMICOLON = 'TSEMICOLON';\nfunction Token(type, value, index) {\n  this.type = type;\n  this.value = value;\n  this.index = index;\n}\nToken.prototype.toString = function () {\n  return this.type + ': ' + this.value;\n};\nfunction TokenStream(parser, expression) {\n  this.pos = 0;\n  this.current = null;\n  this.unaryOps = parser.unaryOps;\n  this.binaryOps = parser.binaryOps;\n  this.ternaryOps = parser.ternaryOps;\n  this.consts = parser.consts;\n  this.expression = expression;\n  this.savedPosition = 0;\n  this.savedCurrent = null;\n  this.options = parser.options;\n  this.parser = parser;\n}\nTokenStream.prototype.newToken = function (type, value, pos) {\n  return new Token(type, value, pos != null ? pos : this.pos);\n};\nTokenStream.prototype.save = function () {\n  this.savedPosition = this.pos;\n  this.savedCurrent = this.current;\n};\nTokenStream.prototype.restore = function () {\n  this.pos = this.savedPosition;\n  this.current = this.savedCurrent;\n};\nTokenStream.prototype.next = function () {\n  if (this.pos >= this.expression.length) {\n    return this.newToken(TEOF, 'EOF');\n  }\n  if (this.isWhitespace() || this.isComment()) {\n    return this.next();\n  } else if (this.isRadixInteger() || this.isNumber() || this.isOperator() || this.isString() || this.isParen() || this.isBracket() || this.isComma() || this.isSemicolon() || this.isNamedOp() || this.isConst() || this.isName()) {\n    return this.current;\n  } else {\n    this.parseError('Unknown character \"' + this.expression.charAt(this.pos) + '\"');\n  }\n};\nTokenStream.prototype.isString = function () {\n  var r = false;\n  var startPos = this.pos;\n  var quote = this.expression.charAt(startPos);\n  if (quote === '\\'' || quote === '\"') {\n    var index = this.expression.indexOf(quote, startPos + 1);\n    while (index >= 0 && this.pos < this.expression.length) {\n      this.pos = index + 1;\n      if (this.expression.charAt(index - 1) !== '\\\\') {\n        var rawString = this.expression.substring(startPos + 1, index);\n        this.current = this.newToken(TSTRING, this.unescape(rawString), startPos);\n        r = true;\n        break;\n      }\n      index = this.expression.indexOf(quote, index + 1);\n    }\n  }\n  return r;\n};\nTokenStream.prototype.isParen = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === '(' || c === ')') {\n    this.current = this.newToken(TPAREN, c);\n    this.pos++;\n    return true;\n  }\n  return false;\n};\nTokenStream.prototype.isBracket = function () {\n  var c = this.expression.charAt(this.pos);\n  if ((c === '[' || c === ']') && this.isOperatorEnabled('[')) {\n    this.current = this.newToken(TBRACKET, c);\n    this.pos++;\n    return true;\n  }\n  return false;\n};\nTokenStream.prototype.isComma = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === ',') {\n    this.current = this.newToken(TCOMMA, ',');\n    this.pos++;\n    return true;\n  }\n  return false;\n};\nTokenStream.prototype.isSemicolon = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === ';') {\n    this.current = this.newToken(TSEMICOLON, ';');\n    this.pos++;\n    return true;\n  }\n  return false;\n};\nTokenStream.prototype.isConst = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos || c !== '_' && c !== '.' && (c < '0' || c > '9')) {\n        break;\n      }\n    }\n  }\n  if (i > startPos) {\n    var str = this.expression.substring(startPos, i);\n    if (str in this.consts) {\n      this.current = this.newToken(TNUMBER, this.consts[str]);\n      this.pos += str.length;\n      return true;\n    }\n  }\n  return false;\n};\nTokenStream.prototype.isNamedOp = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos || c !== '_' && (c < '0' || c > '9')) {\n        break;\n      }\n    }\n  }\n  if (i > startPos) {\n    var str = this.expression.substring(startPos, i);\n    if (this.isOperatorEnabled(str) && (str in this.binaryOps || str in this.unaryOps || str in this.ternaryOps)) {\n      this.current = this.newToken(TOP, str);\n      this.pos += str.length;\n      return true;\n    }\n  }\n  return false;\n};\nTokenStream.prototype.isName = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  var hasLetter = false;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos && (c === '$' || c === '_')) {\n        if (c === '_') {\n          hasLetter = true;\n        }\n        continue;\n      } else if (i === this.pos || !hasLetter || c !== '_' && (c < '0' || c > '9')) {\n        break;\n      }\n    } else {\n      hasLetter = true;\n    }\n  }\n  if (hasLetter) {\n    var str = this.expression.substring(startPos, i);\n    this.current = this.newToken(TNAME, str);\n    this.pos += str.length;\n    return true;\n  }\n  return false;\n};\nTokenStream.prototype.isWhitespace = function () {\n  var r = false;\n  var c = this.expression.charAt(this.pos);\n  while (c === ' ' || c === '\\t' || c === '\\n' || c === '\\r') {\n    r = true;\n    this.pos++;\n    if (this.pos >= this.expression.length) {\n      break;\n    }\n    c = this.expression.charAt(this.pos);\n  }\n  return r;\n};\nvar codePointPattern = /^[0-9a-f]{4}$/i;\nTokenStream.prototype.unescape = function (v) {\n  var index = v.indexOf('\\\\');\n  if (index < 0) {\n    return v;\n  }\n  var buffer = v.substring(0, index);\n  while (index >= 0) {\n    var c = v.charAt(++index);\n    switch (c) {\n      case '\\'':\n        buffer += '\\'';\n        break;\n      case '\"':\n        buffer += '\"';\n        break;\n      case '\\\\':\n        buffer += '\\\\';\n        break;\n      case '/':\n        buffer += '/';\n        break;\n      case 'b':\n        buffer += '\\b';\n        break;\n      case 'f':\n        buffer += '\\f';\n        break;\n      case 'n':\n        buffer += '\\n';\n        break;\n      case 'r':\n        buffer += '\\r';\n        break;\n      case 't':\n        buffer += '\\t';\n        break;\n      case 'u':\n        // interpret the following 4 characters as the hex of the unicode code point\n        var codePoint = v.substring(index + 1, index + 5);\n        if (!codePointPattern.test(codePoint)) {\n          this.parseError('Illegal escape sequence: \\\\u' + codePoint);\n        }\n        buffer += String.fromCharCode(parseInt(codePoint, 16));\n        index += 4;\n        break;\n      default:\n        throw this.parseError('Illegal escape sequence: \"\\\\' + c + '\"');\n    }\n    ++index;\n    var backslash = v.indexOf('\\\\', index);\n    buffer += v.substring(index, backslash < 0 ? v.length : backslash);\n    index = backslash;\n  }\n  return buffer;\n};\nTokenStream.prototype.isComment = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === '/' && this.expression.charAt(this.pos + 1) === '*') {\n    this.pos = this.expression.indexOf('*/', this.pos) + 2;\n    if (this.pos === 1) {\n      this.pos = this.expression.length;\n    }\n    return true;\n  }\n  return false;\n};\nTokenStream.prototype.isRadixInteger = function () {\n  var pos = this.pos;\n  if (pos >= this.expression.length - 2 || this.expression.charAt(pos) !== '0') {\n    return false;\n  }\n  ++pos;\n  var radix;\n  var validDigit;\n  if (this.expression.charAt(pos) === 'x') {\n    radix = 16;\n    validDigit = /^[0-9a-f]$/i;\n    ++pos;\n  } else if (this.expression.charAt(pos) === 'b') {\n    radix = 2;\n    validDigit = /^[01]$/i;\n    ++pos;\n  } else {\n    return false;\n  }\n  var valid = false;\n  var startPos = pos;\n  while (pos < this.expression.length) {\n    var c = this.expression.charAt(pos);\n    if (validDigit.test(c)) {\n      pos++;\n      valid = true;\n    } else {\n      break;\n    }\n  }\n  if (valid) {\n    this.current = this.newToken(TNUMBER, parseInt(this.expression.substring(startPos, pos), radix));\n    this.pos = pos;\n  }\n  return valid;\n};\nTokenStream.prototype.isNumber = function () {\n  var valid = false;\n  var pos = this.pos;\n  var startPos = pos;\n  var resetPos = pos;\n  var foundDot = false;\n  var foundDigits = false;\n  var c;\n  while (pos < this.expression.length) {\n    c = this.expression.charAt(pos);\n    if (c >= '0' && c <= '9' || !foundDot && c === '.') {\n      if (c === '.') {\n        foundDot = true;\n      } else {\n        foundDigits = true;\n      }\n      pos++;\n      valid = foundDigits;\n    } else {\n      break;\n    }\n  }\n  if (valid) {\n    resetPos = pos;\n  }\n  if (c === 'e' || c === 'E') {\n    pos++;\n    var acceptSign = true;\n    var validExponent = false;\n    while (pos < this.expression.length) {\n      c = this.expression.charAt(pos);\n      if (acceptSign && (c === '+' || c === '-')) {\n        acceptSign = false;\n      } else if (c >= '0' && c <= '9') {\n        validExponent = true;\n        acceptSign = false;\n      } else {\n        break;\n      }\n      pos++;\n    }\n    if (!validExponent) {\n      pos = resetPos;\n    }\n  }\n  if (valid) {\n    this.current = this.newToken(TNUMBER, parseFloat(this.expression.substring(startPos, pos)));\n    this.pos = pos;\n  } else {\n    this.pos = resetPos;\n  }\n  return valid;\n};\nTokenStream.prototype.isOperator = function () {\n  var startPos = this.pos;\n  var c = this.expression.charAt(this.pos);\n  if (c === '+' || c === '-' || c === '*' || c === '/' || c === '%' || c === '^' || c === '?' || c === ':' || c === '.') {\n    this.current = this.newToken(TOP, c);\n  } else if (c === '∙' || c === '•') {\n    this.current = this.newToken(TOP, '*');\n  } else if (c === '>') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '>=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, '>');\n    }\n  } else if (c === '<') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '<=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, '<');\n    }\n  } else if (c === '|') {\n    if (this.expression.charAt(this.pos + 1) === '|') {\n      this.current = this.newToken(TOP, '||');\n      this.pos++;\n    } else {\n      return false;\n    }\n  } else if (c === '=') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '==');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, c);\n    }\n  } else if (c === '!') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '!=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, c);\n    }\n  } else {\n    return false;\n  }\n  this.pos++;\n  if (this.isOperatorEnabled(this.current.value)) {\n    return true;\n  } else {\n    this.pos = startPos;\n    return false;\n  }\n};\nTokenStream.prototype.isOperatorEnabled = function (op) {\n  return this.parser.isOperatorEnabled(op);\n};\nTokenStream.prototype.getCoordinates = function () {\n  var line = 0;\n  var column;\n  var newline = -1;\n  do {\n    line++;\n    column = this.pos - newline;\n    newline = this.expression.indexOf('\\n', newline + 1);\n  } while (newline >= 0 && newline < this.pos);\n  return {\n    line: line,\n    column: column\n  };\n};\nTokenStream.prototype.parseError = function (msg) {\n  var coords = this.getCoordinates();\n  throw new Error('parse error [' + coords.line + ':' + coords.column + ']: ' + msg);\n};\nfunction ParserState(parser, tokenStream, options) {\n  this.parser = parser;\n  this.tokens = tokenStream;\n  this.current = null;\n  this.nextToken = null;\n  this.next();\n  this.savedCurrent = null;\n  this.savedNextToken = null;\n  this.allowMemberAccess = options.allowMemberAccess !== false;\n}\nParserState.prototype.next = function () {\n  this.current = this.nextToken;\n  return this.nextToken = this.tokens.next();\n};\nParserState.prototype.tokenMatches = function (token, value) {\n  if (typeof value === 'undefined') {\n    return true;\n  } else if (Array.isArray(value)) {\n    return contains(value, token.value);\n  } else if (typeof value === 'function') {\n    return value(token);\n  } else {\n    return token.value === value;\n  }\n};\nParserState.prototype.save = function () {\n  this.savedCurrent = this.current;\n  this.savedNextToken = this.nextToken;\n  this.tokens.save();\n};\nParserState.prototype.restore = function () {\n  this.tokens.restore();\n  this.current = this.savedCurrent;\n  this.nextToken = this.savedNextToken;\n};\nParserState.prototype.accept = function (type, value) {\n  if (this.nextToken.type === type && this.tokenMatches(this.nextToken, value)) {\n    this.next();\n    return true;\n  }\n  return false;\n};\nParserState.prototype.expect = function (type, value) {\n  if (!this.accept(type, value)) {\n    var coords = this.tokens.getCoordinates();\n    throw new Error('parse error [' + coords.line + ':' + coords.column + ']: Expected ' + (value || type));\n  }\n};\nParserState.prototype.parseAtom = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n  if (this.accept(TNAME) || this.accept(TOP, isPrefixOperator)) {\n    instr.push(new Instruction(IVAR, this.current.value));\n  } else if (this.accept(TNUMBER)) {\n    instr.push(new Instruction(INUMBER, this.current.value));\n  } else if (this.accept(TSTRING)) {\n    instr.push(new Instruction(INUMBER, this.current.value));\n  } else if (this.accept(TPAREN, '(')) {\n    this.parseExpression(instr);\n    this.expect(TPAREN, ')');\n  } else if (this.accept(TBRACKET, '[')) {\n    if (this.accept(TBRACKET, ']')) {\n      instr.push(new Instruction(IARRAY, 0));\n    } else {\n      var argCount = this.parseArrayList(instr);\n      instr.push(new Instruction(IARRAY, argCount));\n    }\n  } else {\n    throw new Error('unexpected ' + this.nextToken);\n  }\n};\nParserState.prototype.parseExpression = function (instr) {\n  var exprInstr = [];\n  if (this.parseUntilEndStatement(instr, exprInstr)) {\n    return;\n  }\n  this.parseVariableAssignmentExpression(exprInstr);\n  if (this.parseUntilEndStatement(instr, exprInstr)) {\n    return;\n  }\n  this.pushExpression(instr, exprInstr);\n};\nParserState.prototype.pushExpression = function (instr, exprInstr) {\n  for (var i = 0, len = exprInstr.length; i < len; i++) {\n    instr.push(exprInstr[i]);\n  }\n};\nParserState.prototype.parseUntilEndStatement = function (instr, exprInstr) {\n  if (!this.accept(TSEMICOLON)) return false;\n  if (this.nextToken && this.nextToken.type !== TEOF && !(this.nextToken.type === TPAREN && this.nextToken.value === ')')) {\n    exprInstr.push(new Instruction(IENDSTATEMENT));\n  }\n  if (this.nextToken.type !== TEOF) {\n    this.parseExpression(exprInstr);\n  }\n  instr.push(new Instruction(IEXPR, exprInstr));\n  return true;\n};\nParserState.prototype.parseArrayList = function (instr) {\n  var argCount = 0;\n  while (!this.accept(TBRACKET, ']')) {\n    this.parseExpression(instr);\n    ++argCount;\n    while (this.accept(TCOMMA)) {\n      this.parseExpression(instr);\n      ++argCount;\n    }\n  }\n  return argCount;\n};\nParserState.prototype.parseVariableAssignmentExpression = function (instr) {\n  this.parseConditionalExpression(instr);\n  while (this.accept(TOP, '=')) {\n    var varName = instr.pop();\n    var varValue = [];\n    var lastInstrIndex = instr.length - 1;\n    if (varName.type === IFUNCALL) {\n      if (!this.tokens.isOperatorEnabled('()=')) {\n        throw new Error('function definition is not permitted');\n      }\n      for (var i = 0, len = varName.value + 1; i < len; i++) {\n        var index = lastInstrIndex - i;\n        if (instr[index].type === IVAR) {\n          instr[index] = new Instruction(IVARNAME, instr[index].value);\n        }\n      }\n      this.parseVariableAssignmentExpression(varValue);\n      instr.push(new Instruction(IEXPR, varValue));\n      instr.push(new Instruction(IFUNDEF, varName.value));\n      continue;\n    }\n    if (varName.type !== IVAR && varName.type !== IMEMBER) {\n      throw new Error('expected variable for assignment');\n    }\n    this.parseVariableAssignmentExpression(varValue);\n    instr.push(new Instruction(IVARNAME, varName.value));\n    instr.push(new Instruction(IEXPR, varValue));\n    instr.push(binaryInstruction('='));\n  }\n};\nParserState.prototype.parseConditionalExpression = function (instr) {\n  this.parseOrExpression(instr);\n  while (this.accept(TOP, '?')) {\n    var trueBranch = [];\n    var falseBranch = [];\n    this.parseConditionalExpression(trueBranch);\n    this.expect(TOP, ':');\n    this.parseConditionalExpression(falseBranch);\n    instr.push(new Instruction(IEXPR, trueBranch));\n    instr.push(new Instruction(IEXPR, falseBranch));\n    instr.push(ternaryInstruction('?'));\n  }\n};\nParserState.prototype.parseOrExpression = function (instr) {\n  this.parseAndExpression(instr);\n  while (this.accept(TOP, 'or')) {\n    var falseBranch = [];\n    this.parseAndExpression(falseBranch);\n    instr.push(new Instruction(IEXPR, falseBranch));\n    instr.push(binaryInstruction('or'));\n  }\n};\nParserState.prototype.parseAndExpression = function (instr) {\n  this.parseComparison(instr);\n  while (this.accept(TOP, 'and')) {\n    var trueBranch = [];\n    this.parseComparison(trueBranch);\n    instr.push(new Instruction(IEXPR, trueBranch));\n    instr.push(binaryInstruction('and'));\n  }\n};\nvar COMPARISON_OPERATORS = ['==', '!=', '<', '<=', '>=', '>', 'in'];\nParserState.prototype.parseComparison = function (instr) {\n  this.parseAddSub(instr);\n  while (this.accept(TOP, COMPARISON_OPERATORS)) {\n    var op = this.current;\n    this.parseAddSub(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\nvar ADD_SUB_OPERATORS = ['+', '-', '||'];\nParserState.prototype.parseAddSub = function (instr) {\n  this.parseTerm(instr);\n  while (this.accept(TOP, ADD_SUB_OPERATORS)) {\n    var op = this.current;\n    this.parseTerm(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\nvar TERM_OPERATORS = ['*', '/', '%'];\nParserState.prototype.parseTerm = function (instr) {\n  this.parseFactor(instr);\n  while (this.accept(TOP, TERM_OPERATORS)) {\n    var op = this.current;\n    this.parseFactor(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\nParserState.prototype.parseFactor = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n  this.save();\n  if (this.accept(TOP, isPrefixOperator)) {\n    if (this.current.value !== '-' && this.current.value !== '+') {\n      if (this.nextToken.type === TPAREN && this.nextToken.value === '(') {\n        this.restore();\n        this.parseExponential(instr);\n        return;\n      } else if (this.nextToken.type === TSEMICOLON || this.nextToken.type === TCOMMA || this.nextToken.type === TEOF || this.nextToken.type === TPAREN && this.nextToken.value === ')') {\n        this.restore();\n        this.parseAtom(instr);\n        return;\n      }\n    }\n    var op = this.current;\n    this.parseFactor(instr);\n    instr.push(unaryInstruction(op.value));\n  } else {\n    this.parseExponential(instr);\n  }\n};\nParserState.prototype.parseExponential = function (instr) {\n  this.parsePostfixExpression(instr);\n  while (this.accept(TOP, '^')) {\n    this.parseFactor(instr);\n    instr.push(binaryInstruction('^'));\n  }\n};\nParserState.prototype.parsePostfixExpression = function (instr) {\n  this.parseFunctionCall(instr);\n  while (this.accept(TOP, '!')) {\n    instr.push(unaryInstruction('!'));\n  }\n};\nParserState.prototype.parseFunctionCall = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n  if (this.accept(TOP, isPrefixOperator)) {\n    var op = this.current;\n    this.parseAtom(instr);\n    instr.push(unaryInstruction(op.value));\n  } else {\n    this.parseMemberExpression(instr);\n    while (this.accept(TPAREN, '(')) {\n      if (this.accept(TPAREN, ')')) {\n        instr.push(new Instruction(IFUNCALL, 0));\n      } else {\n        var argCount = this.parseArgumentList(instr);\n        instr.push(new Instruction(IFUNCALL, argCount));\n      }\n    }\n  }\n};\nParserState.prototype.parseArgumentList = function (instr) {\n  var argCount = 0;\n  while (!this.accept(TPAREN, ')')) {\n    this.parseExpression(instr);\n    ++argCount;\n    while (this.accept(TCOMMA)) {\n      this.parseExpression(instr);\n      ++argCount;\n    }\n  }\n  return argCount;\n};\nParserState.prototype.parseMemberExpression = function (instr) {\n  this.parseAtom(instr);\n  while (this.accept(TOP, '.') || this.accept(TBRACKET, '[')) {\n    var op = this.current;\n    if (op.value === '.') {\n      if (!this.allowMemberAccess) {\n        throw new Error('unexpected \".\", member access is not permitted');\n      }\n      this.expect(TNAME);\n      instr.push(new Instruction(IMEMBER, this.current.value));\n    } else if (op.value === '[') {\n      if (!this.tokens.isOperatorEnabled('[')) {\n        throw new Error('unexpected \"[]\", arrays are disabled');\n      }\n      this.parseExpression(instr);\n      this.expect(TBRACKET, ']');\n      instr.push(binaryInstruction('['));\n    } else {\n      throw new Error('unexpected symbol: ' + op.value);\n    }\n  }\n};\nfunction add(a, b) {\n  return Number(a) + Number(b);\n}\nfunction sub(a, b) {\n  return a - b;\n}\nfunction mul(a, b) {\n  return a * b;\n}\nfunction div(a, b) {\n  return a / b;\n}\nfunction mod(a, b) {\n  return a % b;\n}\nfunction concat(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.concat(b);\n  }\n  return '' + a + b;\n}\nfunction equal(a, b) {\n  return a === b;\n}\nfunction notEqual(a, b) {\n  return a !== b;\n}\nfunction greaterThan(a, b) {\n  return a > b;\n}\nfunction lessThan(a, b) {\n  return a < b;\n}\nfunction greaterThanEqual(a, b) {\n  return a >= b;\n}\nfunction lessThanEqual(a, b) {\n  return a <= b;\n}\nfunction andOperator(a, b) {\n  return Boolean(a && b);\n}\nfunction orOperator(a, b) {\n  return Boolean(a || b);\n}\nfunction inOperator(a, b) {\n  return contains(b, a);\n}\nfunction sinh(a) {\n  return (Math.exp(a) - Math.exp(-a)) / 2;\n}\nfunction cosh(a) {\n  return (Math.exp(a) + Math.exp(-a)) / 2;\n}\nfunction tanh(a) {\n  if (a === Infinity) return 1;\n  if (a === -Infinity) return -1;\n  return (Math.exp(a) - Math.exp(-a)) / (Math.exp(a) + Math.exp(-a));\n}\nfunction asinh(a) {\n  if (a === -Infinity) return a;\n  return Math.log(a + Math.sqrt(a * a + 1));\n}\nfunction acosh(a) {\n  return Math.log(a + Math.sqrt(a * a - 1));\n}\nfunction atanh(a) {\n  return Math.log((1 + a) / (1 - a)) / 2;\n}\nfunction log10(a) {\n  return Math.log(a) * Math.LOG10E;\n}\nfunction neg(a) {\n  return -a;\n}\nfunction not(a) {\n  return !a;\n}\nfunction trunc(a) {\n  return a < 0 ? Math.ceil(a) : Math.floor(a);\n}\nfunction random(a) {\n  return Math.random() * (a || 1);\n}\nfunction factorial(a) {\n  // a!\n  return gamma(a + 1);\n}\nfunction isInteger(value) {\n  return isFinite(value) && value === Math.round(value);\n}\nvar GAMMA_G = 4.7421875;\nvar GAMMA_P = [0.99999999999999709182, 57.156235665862923517, -59.597960355475491248, 14.136097974741747174, -0.49191381609762019978, 0.33994649984811888699e-4, 0.46523628927048575665e-4, -0.98374475304879564677e-4, 0.15808870322491248884e-3, -0.21026444172410488319e-3, 0.21743961811521264320e-3, -0.16431810653676389022e-3, 0.84418223983852743293e-4, -0.26190838401581408670e-4, 0.36899182659531622704e-5];\n\n// Gamma function from math.js\nfunction gamma(n) {\n  var t, x;\n  if (isInteger(n)) {\n    if (n <= 0) {\n      return isFinite(n) ? Infinity : NaN;\n    }\n    if (n > 171) {\n      return Infinity; // Will overflow\n    }\n    var value = n - 2;\n    var res = n - 1;\n    while (value > 1) {\n      res *= value;\n      value--;\n    }\n    if (res === 0) {\n      res = 1; // 0! is per definition 1\n    }\n    return res;\n  }\n  if (n < 0.5) {\n    return Math.PI / (Math.sin(Math.PI * n) * gamma(1 - n));\n  }\n  if (n >= 171.35) {\n    return Infinity; // will overflow\n  }\n  if (n > 85.0) {\n    // Extended Stirling Approx\n    var twoN = n * n;\n    var threeN = twoN * n;\n    var fourN = threeN * n;\n    var fiveN = fourN * n;\n    return Math.sqrt(2 * Math.PI / n) * Math.pow(n / Math.E, n) * (1 + 1 / (12 * n) + 1 / (288 * twoN) - 139 / (51840 * threeN) - 571 / (2488320 * fourN) + 163879 / (209018880 * fiveN) + 5246819 / (75246796800 * fiveN * n));\n  }\n  --n;\n  x = GAMMA_P[0];\n  for (var i = 1; i < GAMMA_P.length; ++i) {\n    x += GAMMA_P[i] / (n + i);\n  }\n  t = n + GAMMA_G + 0.5;\n  return Math.sqrt(2 * Math.PI) * Math.pow(t, n + 0.5) * Math.exp(-t) * x;\n}\nfunction stringOrArrayLength(s) {\n  if (Array.isArray(s)) {\n    return s.length;\n  }\n  return String(s).length;\n}\nfunction hypot() {\n  var sum = 0;\n  var larg = 0;\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = Math.abs(arguments[i]);\n    var div;\n    if (larg < arg) {\n      div = larg / arg;\n      sum = sum * div * div + 1;\n      larg = arg;\n    } else if (arg > 0) {\n      div = arg / larg;\n      sum += div * div;\n    } else {\n      sum += arg;\n    }\n  }\n  return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n}\nfunction condition(cond, yep, nope) {\n  return cond ? yep : nope;\n}\n\n/**\n* Decimal adjustment of a number.\n* From @escopecz.\n*\n* @param {Number} value The number.\n* @param {Integer} exp  The exponent (the 10 logarithm of the adjustment base).\n* @return {Number} The adjusted value.\n*/\nfunction roundTo(value, exp) {\n  // If the exp is undefined or zero...\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math.round(value);\n  }\n  value = +value;\n  exp = -+exp;\n  // If the value is not a number or the exp is not an integer...\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n    return NaN;\n  }\n  // Shift\n  value = value.toString().split('e');\n  value = Math.round(+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp)));\n  // Shift back\n  value = value.toString().split('e');\n  return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));\n}\nfunction setVar(name, value, variables) {\n  if (variables) variables[name] = value;\n  return value;\n}\nfunction arrayIndex(array, index) {\n  return array[index | 0];\n}\nfunction max(array) {\n  if (arguments.length === 1 && Array.isArray(array)) {\n    return Math.max.apply(Math, array);\n  } else {\n    return Math.max.apply(Math, arguments);\n  }\n}\nfunction min(array) {\n  if (arguments.length === 1 && Array.isArray(array)) {\n    return Math.min.apply(Math, array);\n  } else {\n    return Math.min.apply(Math, arguments);\n  }\n}\nfunction arrayMap(f, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to map is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to map is not an array');\n  }\n  return a.map(function (x, i) {\n    return f(x, i);\n  });\n}\nfunction arrayFold(f, init, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to fold is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to fold is not an array');\n  }\n  return a.reduce(function (acc, x, i) {\n    return f(acc, x, i);\n  }, init);\n}\nfunction arrayFilter(f, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to filter is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to filter is not an array');\n  }\n  return a.filter(function (x, i) {\n    return f(x, i);\n  });\n}\nfunction stringOrArrayIndexOf(target, s) {\n  if (!(Array.isArray(s) || typeof s === 'string')) {\n    throw new Error('Second argument to indexOf is not a string or array');\n  }\n  return s.indexOf(target);\n}\nfunction arrayJoin(sep, a) {\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to join is not an array');\n  }\n  return a.join(sep);\n}\nfunction sign(x) {\n  return (x > 0) - (x < 0) || +x;\n}\nvar ONE_THIRD = 1 / 3;\nfunction cbrt(x) {\n  return x < 0 ? -Math.pow(-x, ONE_THIRD) : Math.pow(x, ONE_THIRD);\n}\nfunction expm1(x) {\n  return Math.exp(x) - 1;\n}\nfunction log1p(x) {\n  return Math.log(1 + x);\n}\nfunction log2(x) {\n  return Math.log(x) / Math.LN2;\n}\nfunction Parser(options) {\n  this.options = options || {};\n  this.unaryOps = {\n    sin: Math.sin,\n    cos: Math.cos,\n    tan: Math.tan,\n    asin: Math.asin,\n    acos: Math.acos,\n    atan: Math.atan,\n    sinh: Math.sinh || sinh,\n    cosh: Math.cosh || cosh,\n    tanh: Math.tanh || tanh,\n    asinh: Math.asinh || asinh,\n    acosh: Math.acosh || acosh,\n    atanh: Math.atanh || atanh,\n    sqrt: Math.sqrt,\n    cbrt: Math.cbrt || cbrt,\n    log: Math.log,\n    log2: Math.log2 || log2,\n    ln: Math.log,\n    lg: Math.log10 || log10,\n    log10: Math.log10 || log10,\n    expm1: Math.expm1 || expm1,\n    log1p: Math.log1p || log1p,\n    abs: Math.abs,\n    ceil: Math.ceil,\n    floor: Math.floor,\n    round: Math.round,\n    trunc: Math.trunc || trunc,\n    '-': neg,\n    '+': Number,\n    exp: Math.exp,\n    not: not,\n    length: stringOrArrayLength,\n    '!': factorial,\n    sign: Math.sign || sign\n  };\n  this.binaryOps = {\n    '+': add,\n    '-': sub,\n    '*': mul,\n    '/': div,\n    '%': mod,\n    '^': Math.pow,\n    '||': concat,\n    '==': equal,\n    '!=': notEqual,\n    '>': greaterThan,\n    '<': lessThan,\n    '>=': greaterThanEqual,\n    '<=': lessThanEqual,\n    and: andOperator,\n    or: orOperator,\n    'in': inOperator,\n    '=': setVar,\n    '[': arrayIndex\n  };\n  this.ternaryOps = {\n    '?': condition\n  };\n  this.functions = {\n    random: random,\n    fac: factorial,\n    min: min,\n    max: max,\n    hypot: Math.hypot || hypot,\n    pyt: Math.hypot || hypot,\n    // backward compat\n    pow: Math.pow,\n    atan2: Math.atan2,\n    'if': condition,\n    gamma: gamma,\n    roundTo: roundTo,\n    map: arrayMap,\n    fold: arrayFold,\n    filter: arrayFilter,\n    indexOf: stringOrArrayIndexOf,\n    join: arrayJoin\n  };\n  this.consts = {\n    E: Math.E,\n    PI: Math.PI,\n    'true': true,\n    'false': false\n  };\n}\nParser.prototype.parse = function (expr) {\n  var instr = [];\n  var parserState = new ParserState(this, new TokenStream(this, expr), {\n    allowMemberAccess: this.options.allowMemberAccess\n  });\n  parserState.parseExpression(instr);\n  parserState.expect(TEOF, 'EOF');\n  return new Expression(instr, this);\n};\nParser.prototype.evaluate = function (expr, variables) {\n  return this.parse(expr).evaluate(variables);\n};\nvar sharedParser = new Parser();\nParser.parse = function (expr) {\n  return sharedParser.parse(expr);\n};\nParser.evaluate = function (expr, variables) {\n  return sharedParser.parse(expr).evaluate(variables);\n};\nvar optionNameMap = {\n  '+': 'add',\n  '-': 'subtract',\n  '*': 'multiply',\n  '/': 'divide',\n  '%': 'remainder',\n  '^': 'power',\n  '!': 'factorial',\n  '<': 'comparison',\n  '>': 'comparison',\n  '<=': 'comparison',\n  '>=': 'comparison',\n  '==': 'comparison',\n  '!=': 'comparison',\n  '||': 'concatenate',\n  'and': 'logical',\n  'or': 'logical',\n  'not': 'logical',\n  '?': 'conditional',\n  ':': 'conditional',\n  '=': 'assignment',\n  '[': 'array',\n  '()=': 'fndef'\n};\nfunction getOptionName(op) {\n  return optionNameMap.hasOwnProperty(op) ? optionNameMap[op] : op;\n}\nParser.prototype.isOperatorEnabled = function (op) {\n  var optionName = getOptionName(op);\n  var operators = this.options.operators || {};\n  return !(optionName in operators) || !!operators[optionName];\n};\n\n/*!\n Based on ndef.parser, by Raphael Graf(r@undefined.ch)\n http://www.undefined.ch/mparser/index.html\n\n Ported to JavaScript and modified by Matthew Crumley (email@matthewcrumley.com, http://silentmatt.com/)\n\n You are free to use and modify this code in anyway you find useful. Please leave this comment in the code\n to acknowledge its original source. If you feel like it, I enjoy hearing about projects that use my code,\n but don't feel like you have to let me know or ask permission.\n*/\n\n// Backwards compatibility\nvar index = {\n  Parser: Parser,\n  Expression: Expression\n};\nexport default index;\nexport { Expression, Parser };","map":{"version":3,"names":["INUMBER","IOP1","IOP2","IOP3","IVAR","IVARNAME","IFUNCALL","IFUNDEF","IEXPR","IEXPREVAL","IMEMBER","IENDSTATEMENT","IARRAY","Instruction","type","value","undefined","prototype","toString","unaryInstruction","binaryInstruction","ternaryInstruction","simplify","tokens","unaryOps","binaryOps","ternaryOps","values","nstack","newexpression","n1","n2","n3","f","i","length","item","Array","isArray","push","apply","map","x","concat","hasOwnProperty","pop","shift","substitute","variable","expr","j","expritem","replitem","evaluate","args","argCount","isExpressionEvaluator","resolveExpression","numTokens","functions","parser","isOperatorEnabled","v","Error","unshift","call","scope","Object","assign","len","arguments","defineProperty","writable","createExpressionEvaluator","token","n","expressionToString","toJS","escapeValue","join","String","JSON","stringify","replace","contains","array","obj","getSymbols","symbols","options","withMembers","prevVar","Expression","parse","vars","variables","filter","name","toJSFunction","param","Function","TEOF","TOP","TNUMBER","TSTRING","TPAREN","TBRACKET","TCOMMA","TNAME","TSEMICOLON","Token","index","TokenStream","expression","pos","current","consts","savedPosition","savedCurrent","newToken","save","restore","next","isWhitespace","isComment","isRadixInteger","isNumber","isOperator","isString","isParen","isBracket","isComma","isSemicolon","isNamedOp","isConst","isName","parseError","charAt","r","startPos","quote","indexOf","rawString","substring","unescape","c","toUpperCase","toLowerCase","str","hasLetter","codePointPattern","buffer","codePoint","test","fromCharCode","parseInt","backslash","radix","validDigit","valid","resetPos","foundDot","foundDigits","acceptSign","validExponent","parseFloat","op","getCoordinates","line","column","newline","msg","coords","ParserState","tokenStream","nextToken","savedNextToken","allowMemberAccess","tokenMatches","accept","expect","parseAtom","instr","isPrefixOperator","parseExpression","parseArrayList","exprInstr","parseUntilEndStatement","parseVariableAssignmentExpression","pushExpression","parseConditionalExpression","varName","varValue","lastInstrIndex","parseOrExpression","trueBranch","falseBranch","parseAndExpression","parseComparison","COMPARISON_OPERATORS","parseAddSub","ADD_SUB_OPERATORS","parseTerm","TERM_OPERATORS","parseFactor","parseExponential","parsePostfixExpression","parseFunctionCall","parseMemberExpression","parseArgumentList","add","a","b","Number","sub","mul","div","mod","equal","notEqual","greaterThan","lessThan","greaterThanEqual","lessThanEqual","andOperator","Boolean","orOperator","inOperator","sinh","Math","exp","cosh","tanh","Infinity","asinh","log","sqrt","acosh","atanh","log10","LOG10E","neg","not","trunc","ceil","floor","random","factorial","gamma","isInteger","isFinite","round","GAMMA_G","GAMMA_P","t","NaN","res","PI","sin","twoN","threeN","fourN","fiveN","pow","E","stringOrArrayLength","s","hypot","sum","larg","arg","abs","condition","cond","yep","nope","roundTo","isNaN","split","setVar","arrayIndex","max","min","arrayMap","arrayFold","init","reduce","acc","arrayFilter","stringOrArrayIndexOf","target","arrayJoin","sep","sign","ONE_THIRD","cbrt","expm1","log1p","log2","LN2","Parser","cos","tan","asin","acos","atan","ln","lg","and","or","fac","pyt","atan2","fold","parserState","sharedParser","optionNameMap","getOptionName","optionName","operators"],"sources":["C:/Users/User/Documents/Christian Penticostes/Practices/calculator_reactJs/calculator/node_modules/expr-eval/dist/index.mjs"],"sourcesContent":["var INUMBER = 'INUMBER';\nvar IOP1 = 'IOP1';\nvar IOP2 = 'IOP2';\nvar IOP3 = 'IOP3';\nvar IVAR = 'IVAR';\nvar IVARNAME = 'IVARNAME';\nvar IFUNCALL = 'IFUNCALL';\nvar IFUNDEF = 'IFUNDEF';\nvar IEXPR = 'IEXPR';\nvar IEXPREVAL = 'IEXPREVAL';\nvar IMEMBER = 'IMEMBER';\nvar IENDSTATEMENT = 'IENDSTATEMENT';\nvar IARRAY = 'IARRAY';\n\nfunction Instruction(type, value) {\n  this.type = type;\n  this.value = (value !== undefined && value !== null) ? value : 0;\n}\n\nInstruction.prototype.toString = function () {\n  switch (this.type) {\n    case INUMBER:\n    case IOP1:\n    case IOP2:\n    case IOP3:\n    case IVAR:\n    case IVARNAME:\n    case IENDSTATEMENT:\n      return this.value;\n    case IFUNCALL:\n      return 'CALL ' + this.value;\n    case IFUNDEF:\n      return 'DEF ' + this.value;\n    case IARRAY:\n      return 'ARRAY ' + this.value;\n    case IMEMBER:\n      return '.' + this.value;\n    default:\n      return 'Invalid Instruction';\n  }\n};\n\nfunction unaryInstruction(value) {\n  return new Instruction(IOP1, value);\n}\n\nfunction binaryInstruction(value) {\n  return new Instruction(IOP2, value);\n}\n\nfunction ternaryInstruction(value) {\n  return new Instruction(IOP3, value);\n}\n\nfunction simplify(tokens, unaryOps, binaryOps, ternaryOps, values) {\n  var nstack = [];\n  var newexpression = [];\n  var n1, n2, n3;\n  var f;\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER || type === IVARNAME) {\n      if (Array.isArray(item.value)) {\n        nstack.push.apply(nstack, simplify(item.value.map(function (x) {\n          return new Instruction(INUMBER, x);\n        }).concat(new Instruction(IARRAY, item.value.length)), unaryOps, binaryOps, ternaryOps, values));\n      } else {\n        nstack.push(item);\n      }\n    } else if (type === IVAR && values.hasOwnProperty(item.value)) {\n      item = new Instruction(INUMBER, values[item.value]);\n      nstack.push(item);\n    } else if (type === IOP2 && nstack.length > 1) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = binaryOps[item.value];\n      item = new Instruction(INUMBER, f(n1.value, n2.value));\n      nstack.push(item);\n    } else if (type === IOP3 && nstack.length > 2) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === '?') {\n        nstack.push(n1.value ? n2.value : n3.value);\n      } else {\n        f = ternaryOps[item.value];\n        item = new Instruction(INUMBER, f(n1.value, n2.value, n3.value));\n        nstack.push(item);\n      }\n    } else if (type === IOP1 && nstack.length > 0) {\n      n1 = nstack.pop();\n      f = unaryOps[item.value];\n      item = new Instruction(INUMBER, f(n1.value));\n      nstack.push(item);\n    } else if (type === IEXPR) {\n      while (nstack.length > 0) {\n        newexpression.push(nstack.shift());\n      }\n      newexpression.push(new Instruction(IEXPR, simplify(item.value, unaryOps, binaryOps, ternaryOps, values)));\n    } else if (type === IMEMBER && nstack.length > 0) {\n      n1 = nstack.pop();\n      nstack.push(new Instruction(INUMBER, n1.value[item.value]));\n    } /* else if (type === IARRAY && nstack.length >= item.value) {\n      var length = item.value;\n      while (length-- > 0) {\n        newexpression.push(nstack.pop());\n      }\n      newexpression.push(new Instruction(IARRAY, item.value));\n    } */ else {\n      while (nstack.length > 0) {\n        newexpression.push(nstack.shift());\n      }\n      newexpression.push(item);\n    }\n  }\n  while (nstack.length > 0) {\n    newexpression.push(nstack.shift());\n  }\n  return newexpression;\n}\n\nfunction substitute(tokens, variable, expr) {\n  var newexpression = [];\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === IVAR && item.value === variable) {\n      for (var j = 0; j < expr.tokens.length; j++) {\n        var expritem = expr.tokens[j];\n        var replitem;\n        if (expritem.type === IOP1) {\n          replitem = unaryInstruction(expritem.value);\n        } else if (expritem.type === IOP2) {\n          replitem = binaryInstruction(expritem.value);\n        } else if (expritem.type === IOP3) {\n          replitem = ternaryInstruction(expritem.value);\n        } else {\n          replitem = new Instruction(expritem.type, expritem.value);\n        }\n        newexpression.push(replitem);\n      }\n    } else if (type === IEXPR) {\n      newexpression.push(new Instruction(IEXPR, substitute(item.value, variable, expr)));\n    } else {\n      newexpression.push(item);\n    }\n  }\n  return newexpression;\n}\n\nfunction evaluate(tokens, expr, values) {\n  var nstack = [];\n  var n1, n2, n3;\n  var f, args, argCount;\n\n  if (isExpressionEvaluator(tokens)) {\n    return resolveExpression(tokens, values);\n  }\n\n  var numTokens = tokens.length;\n\n  for (var i = 0; i < numTokens; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER || type === IVARNAME) {\n      nstack.push(item.value);\n    } else if (type === IOP2) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === 'and') {\n        nstack.push(n1 ? !!evaluate(n2, expr, values) : false);\n      } else if (item.value === 'or') {\n        nstack.push(n1 ? true : !!evaluate(n2, expr, values));\n      } else if (item.value === '=') {\n        f = expr.binaryOps[item.value];\n        nstack.push(f(n1, evaluate(n2, expr, values), values));\n      } else {\n        f = expr.binaryOps[item.value];\n        nstack.push(f(resolveExpression(n1, values), resolveExpression(n2, values)));\n      }\n    } else if (type === IOP3) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === '?') {\n        nstack.push(evaluate(n1 ? n2 : n3, expr, values));\n      } else {\n        f = expr.ternaryOps[item.value];\n        nstack.push(f(resolveExpression(n1, values), resolveExpression(n2, values), resolveExpression(n3, values)));\n      }\n    } else if (type === IVAR) {\n      if (item.value in expr.functions) {\n        nstack.push(expr.functions[item.value]);\n      } else if (item.value in expr.unaryOps && expr.parser.isOperatorEnabled(item.value)) {\n        nstack.push(expr.unaryOps[item.value]);\n      } else {\n        var v = values[item.value];\n        if (v !== undefined) {\n          nstack.push(v);\n        } else {\n          throw new Error('undefined variable: ' + item.value);\n        }\n      }\n    } else if (type === IOP1) {\n      n1 = nstack.pop();\n      f = expr.unaryOps[item.value];\n      nstack.push(f(resolveExpression(n1, values)));\n    } else if (type === IFUNCALL) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(resolveExpression(nstack.pop(), values));\n      }\n      f = nstack.pop();\n      if (f.apply && f.call) {\n        nstack.push(f.apply(undefined, args));\n      } else {\n        throw new Error(f + ' is not a function');\n      }\n    } else if (type === IFUNDEF) {\n      // Create closure to keep references to arguments and expression\n      nstack.push((function () {\n        var n2 = nstack.pop();\n        var args = [];\n        var argCount = item.value;\n        while (argCount-- > 0) {\n          args.unshift(nstack.pop());\n        }\n        var n1 = nstack.pop();\n        var f = function () {\n          var scope = Object.assign({}, values);\n          for (var i = 0, len = args.length; i < len; i++) {\n            scope[args[i]] = arguments[i];\n          }\n          return evaluate(n2, expr, scope);\n        };\n        // f.name = n1\n        Object.defineProperty(f, 'name', {\n          value: n1,\n          writable: false\n        });\n        values[n1] = f;\n        return f;\n      })());\n    } else if (type === IEXPR) {\n      nstack.push(createExpressionEvaluator(item, expr));\n    } else if (type === IEXPREVAL) {\n      nstack.push(item);\n    } else if (type === IMEMBER) {\n      n1 = nstack.pop();\n      nstack.push(n1[item.value]);\n    } else if (type === IENDSTATEMENT) {\n      nstack.pop();\n    } else if (type === IARRAY) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      nstack.push(args);\n    } else {\n      throw new Error('invalid Expression');\n    }\n  }\n  if (nstack.length > 1) {\n    throw new Error('invalid Expression (parity)');\n  }\n  // Explicitly return zero to avoid test issues caused by -0\n  return nstack[0] === 0 ? 0 : resolveExpression(nstack[0], values);\n}\n\nfunction createExpressionEvaluator(token, expr, values) {\n  if (isExpressionEvaluator(token)) return token;\n  return {\n    type: IEXPREVAL,\n    value: function (scope) {\n      return evaluate(token.value, expr, scope);\n    }\n  };\n}\n\nfunction isExpressionEvaluator(n) {\n  return n && n.type === IEXPREVAL;\n}\n\nfunction resolveExpression(n, values) {\n  return isExpressionEvaluator(n) ? n.value(values) : n;\n}\n\nfunction expressionToString(tokens, toJS) {\n  var nstack = [];\n  var n1, n2, n3;\n  var f, args, argCount;\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER) {\n      if (typeof item.value === 'number' && item.value < 0) {\n        nstack.push('(' + item.value + ')');\n      } else if (Array.isArray(item.value)) {\n        nstack.push('[' + item.value.map(escapeValue).join(', ') + ']');\n      } else {\n        nstack.push(escapeValue(item.value));\n      }\n    } else if (type === IOP2) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = item.value;\n      if (toJS) {\n        if (f === '^') {\n          nstack.push('Math.pow(' + n1 + ', ' + n2 + ')');\n        } else if (f === 'and') {\n          nstack.push('(!!' + n1 + ' && !!' + n2 + ')');\n        } else if (f === 'or') {\n          nstack.push('(!!' + n1 + ' || !!' + n2 + ')');\n        } else if (f === '||') {\n          nstack.push('(function(a,b){ return Array.isArray(a) && Array.isArray(b) ? a.concat(b) : String(a) + String(b); }((' + n1 + '),(' + n2 + ')))');\n        } else if (f === '==') {\n          nstack.push('(' + n1 + ' === ' + n2 + ')');\n        } else if (f === '!=') {\n          nstack.push('(' + n1 + ' !== ' + n2 + ')');\n        } else if (f === '[') {\n          nstack.push(n1 + '[(' + n2 + ') | 0]');\n        } else {\n          nstack.push('(' + n1 + ' ' + f + ' ' + n2 + ')');\n        }\n      } else {\n        if (f === '[') {\n          nstack.push(n1 + '[' + n2 + ']');\n        } else {\n          nstack.push('(' + n1 + ' ' + f + ' ' + n2 + ')');\n        }\n      }\n    } else if (type === IOP3) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = item.value;\n      if (f === '?') {\n        nstack.push('(' + n1 + ' ? ' + n2 + ' : ' + n3 + ')');\n      } else {\n        throw new Error('invalid Expression');\n      }\n    } else if (type === IVAR || type === IVARNAME) {\n      nstack.push(item.value);\n    } else if (type === IOP1) {\n      n1 = nstack.pop();\n      f = item.value;\n      if (f === '-' || f === '+') {\n        nstack.push('(' + f + n1 + ')');\n      } else if (toJS) {\n        if (f === 'not') {\n          nstack.push('(' + '!' + n1 + ')');\n        } else if (f === '!') {\n          nstack.push('fac(' + n1 + ')');\n        } else {\n          nstack.push(f + '(' + n1 + ')');\n        }\n      } else if (f === '!') {\n        nstack.push('(' + n1 + '!)');\n      } else {\n        nstack.push('(' + f + ' ' + n1 + ')');\n      }\n    } else if (type === IFUNCALL) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      f = nstack.pop();\n      nstack.push(f + '(' + args.join(', ') + ')');\n    } else if (type === IFUNDEF) {\n      n2 = nstack.pop();\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      n1 = nstack.pop();\n      if (toJS) {\n        nstack.push('(' + n1 + ' = function(' + args.join(', ') + ') { return ' + n2 + ' })');\n      } else {\n        nstack.push('(' + n1 + '(' + args.join(', ') + ') = ' + n2 + ')');\n      }\n    } else if (type === IMEMBER) {\n      n1 = nstack.pop();\n      nstack.push(n1 + '.' + item.value);\n    } else if (type === IARRAY) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      nstack.push('[' + args.join(', ') + ']');\n    } else if (type === IEXPR) {\n      nstack.push('(' + expressionToString(item.value, toJS) + ')');\n    } else if (type === IENDSTATEMENT) ; else {\n      throw new Error('invalid Expression');\n    }\n  }\n  if (nstack.length > 1) {\n    if (toJS) {\n      nstack = [ nstack.join(',') ];\n    } else {\n      nstack = [ nstack.join(';') ];\n    }\n  }\n  return String(nstack[0]);\n}\n\nfunction escapeValue(v) {\n  if (typeof v === 'string') {\n    return JSON.stringify(v).replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n  }\n  return v;\n}\n\nfunction contains(array, obj) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getSymbols(tokens, symbols, options) {\n  options = options || {};\n  var withMembers = !!options.withMembers;\n  var prevVar = null;\n\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    if (item.type === IVAR || item.type === IVARNAME) {\n      if (!withMembers && !contains(symbols, item.value)) {\n        symbols.push(item.value);\n      } else if (prevVar !== null) {\n        if (!contains(symbols, prevVar)) {\n          symbols.push(prevVar);\n        }\n        prevVar = item.value;\n      } else {\n        prevVar = item.value;\n      }\n    } else if (item.type === IMEMBER && withMembers && prevVar !== null) {\n      prevVar += '.' + item.value;\n    } else if (item.type === IEXPR) {\n      getSymbols(item.value, symbols, options);\n    } else if (prevVar !== null) {\n      if (!contains(symbols, prevVar)) {\n        symbols.push(prevVar);\n      }\n      prevVar = null;\n    }\n  }\n\n  if (prevVar !== null && !contains(symbols, prevVar)) {\n    symbols.push(prevVar);\n  }\n}\n\nfunction Expression(tokens, parser) {\n  this.tokens = tokens;\n  this.parser = parser;\n  this.unaryOps = parser.unaryOps;\n  this.binaryOps = parser.binaryOps;\n  this.ternaryOps = parser.ternaryOps;\n  this.functions = parser.functions;\n}\n\nExpression.prototype.simplify = function (values) {\n  values = values || {};\n  return new Expression(simplify(this.tokens, this.unaryOps, this.binaryOps, this.ternaryOps, values), this.parser);\n};\n\nExpression.prototype.substitute = function (variable, expr) {\n  if (!(expr instanceof Expression)) {\n    expr = this.parser.parse(String(expr));\n  }\n\n  return new Expression(substitute(this.tokens, variable, expr), this.parser);\n};\n\nExpression.prototype.evaluate = function (values) {\n  values = values || {};\n  return evaluate(this.tokens, this, values);\n};\n\nExpression.prototype.toString = function () {\n  return expressionToString(this.tokens, false);\n};\n\nExpression.prototype.symbols = function (options) {\n  options = options || {};\n  var vars = [];\n  getSymbols(this.tokens, vars, options);\n  return vars;\n};\n\nExpression.prototype.variables = function (options) {\n  options = options || {};\n  var vars = [];\n  getSymbols(this.tokens, vars, options);\n  var functions = this.functions;\n  return vars.filter(function (name) {\n    return !(name in functions);\n  });\n};\n\nExpression.prototype.toJSFunction = function (param, variables) {\n  var expr = this;\n  var f = new Function(param, 'with(this.functions) with (this.ternaryOps) with (this.binaryOps) with (this.unaryOps) { return ' + expressionToString(this.simplify(variables).tokens, true) + '; }'); // eslint-disable-line no-new-func\n  return function () {\n    return f.apply(expr, arguments);\n  };\n};\n\nvar TEOF = 'TEOF';\nvar TOP = 'TOP';\nvar TNUMBER = 'TNUMBER';\nvar TSTRING = 'TSTRING';\nvar TPAREN = 'TPAREN';\nvar TBRACKET = 'TBRACKET';\nvar TCOMMA = 'TCOMMA';\nvar TNAME = 'TNAME';\nvar TSEMICOLON = 'TSEMICOLON';\n\nfunction Token(type, value, index) {\n  this.type = type;\n  this.value = value;\n  this.index = index;\n}\n\nToken.prototype.toString = function () {\n  return this.type + ': ' + this.value;\n};\n\nfunction TokenStream(parser, expression) {\n  this.pos = 0;\n  this.current = null;\n  this.unaryOps = parser.unaryOps;\n  this.binaryOps = parser.binaryOps;\n  this.ternaryOps = parser.ternaryOps;\n  this.consts = parser.consts;\n  this.expression = expression;\n  this.savedPosition = 0;\n  this.savedCurrent = null;\n  this.options = parser.options;\n  this.parser = parser;\n}\n\nTokenStream.prototype.newToken = function (type, value, pos) {\n  return new Token(type, value, pos != null ? pos : this.pos);\n};\n\nTokenStream.prototype.save = function () {\n  this.savedPosition = this.pos;\n  this.savedCurrent = this.current;\n};\n\nTokenStream.prototype.restore = function () {\n  this.pos = this.savedPosition;\n  this.current = this.savedCurrent;\n};\n\nTokenStream.prototype.next = function () {\n  if (this.pos >= this.expression.length) {\n    return this.newToken(TEOF, 'EOF');\n  }\n\n  if (this.isWhitespace() || this.isComment()) {\n    return this.next();\n  } else if (this.isRadixInteger() ||\n      this.isNumber() ||\n      this.isOperator() ||\n      this.isString() ||\n      this.isParen() ||\n      this.isBracket() ||\n      this.isComma() ||\n      this.isSemicolon() ||\n      this.isNamedOp() ||\n      this.isConst() ||\n      this.isName()) {\n    return this.current;\n  } else {\n    this.parseError('Unknown character \"' + this.expression.charAt(this.pos) + '\"');\n  }\n};\n\nTokenStream.prototype.isString = function () {\n  var r = false;\n  var startPos = this.pos;\n  var quote = this.expression.charAt(startPos);\n\n  if (quote === '\\'' || quote === '\"') {\n    var index = this.expression.indexOf(quote, startPos + 1);\n    while (index >= 0 && this.pos < this.expression.length) {\n      this.pos = index + 1;\n      if (this.expression.charAt(index - 1) !== '\\\\') {\n        var rawString = this.expression.substring(startPos + 1, index);\n        this.current = this.newToken(TSTRING, this.unescape(rawString), startPos);\n        r = true;\n        break;\n      }\n      index = this.expression.indexOf(quote, index + 1);\n    }\n  }\n  return r;\n};\n\nTokenStream.prototype.isParen = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === '(' || c === ')') {\n    this.current = this.newToken(TPAREN, c);\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isBracket = function () {\n  var c = this.expression.charAt(this.pos);\n  if ((c === '[' || c === ']') && this.isOperatorEnabled('[')) {\n    this.current = this.newToken(TBRACKET, c);\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isComma = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === ',') {\n    this.current = this.newToken(TCOMMA, ',');\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isSemicolon = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === ';') {\n    this.current = this.newToken(TSEMICOLON, ';');\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isConst = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos || (c !== '_' && c !== '.' && (c < '0' || c > '9'))) {\n        break;\n      }\n    }\n  }\n  if (i > startPos) {\n    var str = this.expression.substring(startPos, i);\n    if (str in this.consts) {\n      this.current = this.newToken(TNUMBER, this.consts[str]);\n      this.pos += str.length;\n      return true;\n    }\n  }\n  return false;\n};\n\nTokenStream.prototype.isNamedOp = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos || (c !== '_' && (c < '0' || c > '9'))) {\n        break;\n      }\n    }\n  }\n  if (i > startPos) {\n    var str = this.expression.substring(startPos, i);\n    if (this.isOperatorEnabled(str) && (str in this.binaryOps || str in this.unaryOps || str in this.ternaryOps)) {\n      this.current = this.newToken(TOP, str);\n      this.pos += str.length;\n      return true;\n    }\n  }\n  return false;\n};\n\nTokenStream.prototype.isName = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  var hasLetter = false;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos && (c === '$' || c === '_')) {\n        if (c === '_') {\n          hasLetter = true;\n        }\n        continue;\n      } else if (i === this.pos || !hasLetter || (c !== '_' && (c < '0' || c > '9'))) {\n        break;\n      }\n    } else {\n      hasLetter = true;\n    }\n  }\n  if (hasLetter) {\n    var str = this.expression.substring(startPos, i);\n    this.current = this.newToken(TNAME, str);\n    this.pos += str.length;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isWhitespace = function () {\n  var r = false;\n  var c = this.expression.charAt(this.pos);\n  while (c === ' ' || c === '\\t' || c === '\\n' || c === '\\r') {\n    r = true;\n    this.pos++;\n    if (this.pos >= this.expression.length) {\n      break;\n    }\n    c = this.expression.charAt(this.pos);\n  }\n  return r;\n};\n\nvar codePointPattern = /^[0-9a-f]{4}$/i;\n\nTokenStream.prototype.unescape = function (v) {\n  var index = v.indexOf('\\\\');\n  if (index < 0) {\n    return v;\n  }\n\n  var buffer = v.substring(0, index);\n  while (index >= 0) {\n    var c = v.charAt(++index);\n    switch (c) {\n      case '\\'':\n        buffer += '\\'';\n        break;\n      case '\"':\n        buffer += '\"';\n        break;\n      case '\\\\':\n        buffer += '\\\\';\n        break;\n      case '/':\n        buffer += '/';\n        break;\n      case 'b':\n        buffer += '\\b';\n        break;\n      case 'f':\n        buffer += '\\f';\n        break;\n      case 'n':\n        buffer += '\\n';\n        break;\n      case 'r':\n        buffer += '\\r';\n        break;\n      case 't':\n        buffer += '\\t';\n        break;\n      case 'u':\n        // interpret the following 4 characters as the hex of the unicode code point\n        var codePoint = v.substring(index + 1, index + 5);\n        if (!codePointPattern.test(codePoint)) {\n          this.parseError('Illegal escape sequence: \\\\u' + codePoint);\n        }\n        buffer += String.fromCharCode(parseInt(codePoint, 16));\n        index += 4;\n        break;\n      default:\n        throw this.parseError('Illegal escape sequence: \"\\\\' + c + '\"');\n    }\n    ++index;\n    var backslash = v.indexOf('\\\\', index);\n    buffer += v.substring(index, backslash < 0 ? v.length : backslash);\n    index = backslash;\n  }\n\n  return buffer;\n};\n\nTokenStream.prototype.isComment = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === '/' && this.expression.charAt(this.pos + 1) === '*') {\n    this.pos = this.expression.indexOf('*/', this.pos) + 2;\n    if (this.pos === 1) {\n      this.pos = this.expression.length;\n    }\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isRadixInteger = function () {\n  var pos = this.pos;\n\n  if (pos >= this.expression.length - 2 || this.expression.charAt(pos) !== '0') {\n    return false;\n  }\n  ++pos;\n\n  var radix;\n  var validDigit;\n  if (this.expression.charAt(pos) === 'x') {\n    radix = 16;\n    validDigit = /^[0-9a-f]$/i;\n    ++pos;\n  } else if (this.expression.charAt(pos) === 'b') {\n    radix = 2;\n    validDigit = /^[01]$/i;\n    ++pos;\n  } else {\n    return false;\n  }\n\n  var valid = false;\n  var startPos = pos;\n\n  while (pos < this.expression.length) {\n    var c = this.expression.charAt(pos);\n    if (validDigit.test(c)) {\n      pos++;\n      valid = true;\n    } else {\n      break;\n    }\n  }\n\n  if (valid) {\n    this.current = this.newToken(TNUMBER, parseInt(this.expression.substring(startPos, pos), radix));\n    this.pos = pos;\n  }\n  return valid;\n};\n\nTokenStream.prototype.isNumber = function () {\n  var valid = false;\n  var pos = this.pos;\n  var startPos = pos;\n  var resetPos = pos;\n  var foundDot = false;\n  var foundDigits = false;\n  var c;\n\n  while (pos < this.expression.length) {\n    c = this.expression.charAt(pos);\n    if ((c >= '0' && c <= '9') || (!foundDot && c === '.')) {\n      if (c === '.') {\n        foundDot = true;\n      } else {\n        foundDigits = true;\n      }\n      pos++;\n      valid = foundDigits;\n    } else {\n      break;\n    }\n  }\n\n  if (valid) {\n    resetPos = pos;\n  }\n\n  if (c === 'e' || c === 'E') {\n    pos++;\n    var acceptSign = true;\n    var validExponent = false;\n    while (pos < this.expression.length) {\n      c = this.expression.charAt(pos);\n      if (acceptSign && (c === '+' || c === '-')) {\n        acceptSign = false;\n      } else if (c >= '0' && c <= '9') {\n        validExponent = true;\n        acceptSign = false;\n      } else {\n        break;\n      }\n      pos++;\n    }\n\n    if (!validExponent) {\n      pos = resetPos;\n    }\n  }\n\n  if (valid) {\n    this.current = this.newToken(TNUMBER, parseFloat(this.expression.substring(startPos, pos)));\n    this.pos = pos;\n  } else {\n    this.pos = resetPos;\n  }\n  return valid;\n};\n\nTokenStream.prototype.isOperator = function () {\n  var startPos = this.pos;\n  var c = this.expression.charAt(this.pos);\n\n  if (c === '+' || c === '-' || c === '*' || c === '/' || c === '%' || c === '^' || c === '?' || c === ':' || c === '.') {\n    this.current = this.newToken(TOP, c);\n  } else if (c === '∙' || c === '•') {\n    this.current = this.newToken(TOP, '*');\n  } else if (c === '>') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '>=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, '>');\n    }\n  } else if (c === '<') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '<=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, '<');\n    }\n  } else if (c === '|') {\n    if (this.expression.charAt(this.pos + 1) === '|') {\n      this.current = this.newToken(TOP, '||');\n      this.pos++;\n    } else {\n      return false;\n    }\n  } else if (c === '=') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '==');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, c);\n    }\n  } else if (c === '!') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '!=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, c);\n    }\n  } else {\n    return false;\n  }\n  this.pos++;\n\n  if (this.isOperatorEnabled(this.current.value)) {\n    return true;\n  } else {\n    this.pos = startPos;\n    return false;\n  }\n};\n\nTokenStream.prototype.isOperatorEnabled = function (op) {\n  return this.parser.isOperatorEnabled(op);\n};\n\nTokenStream.prototype.getCoordinates = function () {\n  var line = 0;\n  var column;\n  var newline = -1;\n  do {\n    line++;\n    column = this.pos - newline;\n    newline = this.expression.indexOf('\\n', newline + 1);\n  } while (newline >= 0 && newline < this.pos);\n\n  return {\n    line: line,\n    column: column\n  };\n};\n\nTokenStream.prototype.parseError = function (msg) {\n  var coords = this.getCoordinates();\n  throw new Error('parse error [' + coords.line + ':' + coords.column + ']: ' + msg);\n};\n\nfunction ParserState(parser, tokenStream, options) {\n  this.parser = parser;\n  this.tokens = tokenStream;\n  this.current = null;\n  this.nextToken = null;\n  this.next();\n  this.savedCurrent = null;\n  this.savedNextToken = null;\n  this.allowMemberAccess = options.allowMemberAccess !== false;\n}\n\nParserState.prototype.next = function () {\n  this.current = this.nextToken;\n  return (this.nextToken = this.tokens.next());\n};\n\nParserState.prototype.tokenMatches = function (token, value) {\n  if (typeof value === 'undefined') {\n    return true;\n  } else if (Array.isArray(value)) {\n    return contains(value, token.value);\n  } else if (typeof value === 'function') {\n    return value(token);\n  } else {\n    return token.value === value;\n  }\n};\n\nParserState.prototype.save = function () {\n  this.savedCurrent = this.current;\n  this.savedNextToken = this.nextToken;\n  this.tokens.save();\n};\n\nParserState.prototype.restore = function () {\n  this.tokens.restore();\n  this.current = this.savedCurrent;\n  this.nextToken = this.savedNextToken;\n};\n\nParserState.prototype.accept = function (type, value) {\n  if (this.nextToken.type === type && this.tokenMatches(this.nextToken, value)) {\n    this.next();\n    return true;\n  }\n  return false;\n};\n\nParserState.prototype.expect = function (type, value) {\n  if (!this.accept(type, value)) {\n    var coords = this.tokens.getCoordinates();\n    throw new Error('parse error [' + coords.line + ':' + coords.column + ']: Expected ' + (value || type));\n  }\n};\n\nParserState.prototype.parseAtom = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n\n  if (this.accept(TNAME) || this.accept(TOP, isPrefixOperator)) {\n    instr.push(new Instruction(IVAR, this.current.value));\n  } else if (this.accept(TNUMBER)) {\n    instr.push(new Instruction(INUMBER, this.current.value));\n  } else if (this.accept(TSTRING)) {\n    instr.push(new Instruction(INUMBER, this.current.value));\n  } else if (this.accept(TPAREN, '(')) {\n    this.parseExpression(instr);\n    this.expect(TPAREN, ')');\n  } else if (this.accept(TBRACKET, '[')) {\n    if (this.accept(TBRACKET, ']')) {\n      instr.push(new Instruction(IARRAY, 0));\n    } else {\n      var argCount = this.parseArrayList(instr);\n      instr.push(new Instruction(IARRAY, argCount));\n    }\n  } else {\n    throw new Error('unexpected ' + this.nextToken);\n  }\n};\n\nParserState.prototype.parseExpression = function (instr) {\n  var exprInstr = [];\n  if (this.parseUntilEndStatement(instr, exprInstr)) {\n    return;\n  }\n  this.parseVariableAssignmentExpression(exprInstr);\n  if (this.parseUntilEndStatement(instr, exprInstr)) {\n    return;\n  }\n  this.pushExpression(instr, exprInstr);\n};\n\nParserState.prototype.pushExpression = function (instr, exprInstr) {\n  for (var i = 0, len = exprInstr.length; i < len; i++) {\n    instr.push(exprInstr[i]);\n  }\n};\n\nParserState.prototype.parseUntilEndStatement = function (instr, exprInstr) {\n  if (!this.accept(TSEMICOLON)) return false;\n  if (this.nextToken && this.nextToken.type !== TEOF && !(this.nextToken.type === TPAREN && this.nextToken.value === ')')) {\n    exprInstr.push(new Instruction(IENDSTATEMENT));\n  }\n  if (this.nextToken.type !== TEOF) {\n    this.parseExpression(exprInstr);\n  }\n  instr.push(new Instruction(IEXPR, exprInstr));\n  return true;\n};\n\nParserState.prototype.parseArrayList = function (instr) {\n  var argCount = 0;\n\n  while (!this.accept(TBRACKET, ']')) {\n    this.parseExpression(instr);\n    ++argCount;\n    while (this.accept(TCOMMA)) {\n      this.parseExpression(instr);\n      ++argCount;\n    }\n  }\n\n  return argCount;\n};\n\nParserState.prototype.parseVariableAssignmentExpression = function (instr) {\n  this.parseConditionalExpression(instr);\n  while (this.accept(TOP, '=')) {\n    var varName = instr.pop();\n    var varValue = [];\n    var lastInstrIndex = instr.length - 1;\n    if (varName.type === IFUNCALL) {\n      if (!this.tokens.isOperatorEnabled('()=')) {\n        throw new Error('function definition is not permitted');\n      }\n      for (var i = 0, len = varName.value + 1; i < len; i++) {\n        var index = lastInstrIndex - i;\n        if (instr[index].type === IVAR) {\n          instr[index] = new Instruction(IVARNAME, instr[index].value);\n        }\n      }\n      this.parseVariableAssignmentExpression(varValue);\n      instr.push(new Instruction(IEXPR, varValue));\n      instr.push(new Instruction(IFUNDEF, varName.value));\n      continue;\n    }\n    if (varName.type !== IVAR && varName.type !== IMEMBER) {\n      throw new Error('expected variable for assignment');\n    }\n    this.parseVariableAssignmentExpression(varValue);\n    instr.push(new Instruction(IVARNAME, varName.value));\n    instr.push(new Instruction(IEXPR, varValue));\n    instr.push(binaryInstruction('='));\n  }\n};\n\nParserState.prototype.parseConditionalExpression = function (instr) {\n  this.parseOrExpression(instr);\n  while (this.accept(TOP, '?')) {\n    var trueBranch = [];\n    var falseBranch = [];\n    this.parseConditionalExpression(trueBranch);\n    this.expect(TOP, ':');\n    this.parseConditionalExpression(falseBranch);\n    instr.push(new Instruction(IEXPR, trueBranch));\n    instr.push(new Instruction(IEXPR, falseBranch));\n    instr.push(ternaryInstruction('?'));\n  }\n};\n\nParserState.prototype.parseOrExpression = function (instr) {\n  this.parseAndExpression(instr);\n  while (this.accept(TOP, 'or')) {\n    var falseBranch = [];\n    this.parseAndExpression(falseBranch);\n    instr.push(new Instruction(IEXPR, falseBranch));\n    instr.push(binaryInstruction('or'));\n  }\n};\n\nParserState.prototype.parseAndExpression = function (instr) {\n  this.parseComparison(instr);\n  while (this.accept(TOP, 'and')) {\n    var trueBranch = [];\n    this.parseComparison(trueBranch);\n    instr.push(new Instruction(IEXPR, trueBranch));\n    instr.push(binaryInstruction('and'));\n  }\n};\n\nvar COMPARISON_OPERATORS = ['==', '!=', '<', '<=', '>=', '>', 'in'];\n\nParserState.prototype.parseComparison = function (instr) {\n  this.parseAddSub(instr);\n  while (this.accept(TOP, COMPARISON_OPERATORS)) {\n    var op = this.current;\n    this.parseAddSub(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\n\nvar ADD_SUB_OPERATORS = ['+', '-', '||'];\n\nParserState.prototype.parseAddSub = function (instr) {\n  this.parseTerm(instr);\n  while (this.accept(TOP, ADD_SUB_OPERATORS)) {\n    var op = this.current;\n    this.parseTerm(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\n\nvar TERM_OPERATORS = ['*', '/', '%'];\n\nParserState.prototype.parseTerm = function (instr) {\n  this.parseFactor(instr);\n  while (this.accept(TOP, TERM_OPERATORS)) {\n    var op = this.current;\n    this.parseFactor(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\n\nParserState.prototype.parseFactor = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n\n  this.save();\n  if (this.accept(TOP, isPrefixOperator)) {\n    if (this.current.value !== '-' && this.current.value !== '+') {\n      if (this.nextToken.type === TPAREN && this.nextToken.value === '(') {\n        this.restore();\n        this.parseExponential(instr);\n        return;\n      } else if (this.nextToken.type === TSEMICOLON || this.nextToken.type === TCOMMA || this.nextToken.type === TEOF || (this.nextToken.type === TPAREN && this.nextToken.value === ')')) {\n        this.restore();\n        this.parseAtom(instr);\n        return;\n      }\n    }\n\n    var op = this.current;\n    this.parseFactor(instr);\n    instr.push(unaryInstruction(op.value));\n  } else {\n    this.parseExponential(instr);\n  }\n};\n\nParserState.prototype.parseExponential = function (instr) {\n  this.parsePostfixExpression(instr);\n  while (this.accept(TOP, '^')) {\n    this.parseFactor(instr);\n    instr.push(binaryInstruction('^'));\n  }\n};\n\nParserState.prototype.parsePostfixExpression = function (instr) {\n  this.parseFunctionCall(instr);\n  while (this.accept(TOP, '!')) {\n    instr.push(unaryInstruction('!'));\n  }\n};\n\nParserState.prototype.parseFunctionCall = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n\n  if (this.accept(TOP, isPrefixOperator)) {\n    var op = this.current;\n    this.parseAtom(instr);\n    instr.push(unaryInstruction(op.value));\n  } else {\n    this.parseMemberExpression(instr);\n    while (this.accept(TPAREN, '(')) {\n      if (this.accept(TPAREN, ')')) {\n        instr.push(new Instruction(IFUNCALL, 0));\n      } else {\n        var argCount = this.parseArgumentList(instr);\n        instr.push(new Instruction(IFUNCALL, argCount));\n      }\n    }\n  }\n};\n\nParserState.prototype.parseArgumentList = function (instr) {\n  var argCount = 0;\n\n  while (!this.accept(TPAREN, ')')) {\n    this.parseExpression(instr);\n    ++argCount;\n    while (this.accept(TCOMMA)) {\n      this.parseExpression(instr);\n      ++argCount;\n    }\n  }\n\n  return argCount;\n};\n\nParserState.prototype.parseMemberExpression = function (instr) {\n  this.parseAtom(instr);\n  while (this.accept(TOP, '.') || this.accept(TBRACKET, '[')) {\n    var op = this.current;\n\n    if (op.value === '.') {\n      if (!this.allowMemberAccess) {\n        throw new Error('unexpected \".\", member access is not permitted');\n      }\n\n      this.expect(TNAME);\n      instr.push(new Instruction(IMEMBER, this.current.value));\n    } else if (op.value === '[') {\n      if (!this.tokens.isOperatorEnabled('[')) {\n        throw new Error('unexpected \"[]\", arrays are disabled');\n      }\n\n      this.parseExpression(instr);\n      this.expect(TBRACKET, ']');\n      instr.push(binaryInstruction('['));\n    } else {\n      throw new Error('unexpected symbol: ' + op.value);\n    }\n  }\n};\n\nfunction add(a, b) {\n  return Number(a) + Number(b);\n}\n\nfunction sub(a, b) {\n  return a - b;\n}\n\nfunction mul(a, b) {\n  return a * b;\n}\n\nfunction div(a, b) {\n  return a / b;\n}\n\nfunction mod(a, b) {\n  return a % b;\n}\n\nfunction concat(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.concat(b);\n  }\n  return '' + a + b;\n}\n\nfunction equal(a, b) {\n  return a === b;\n}\n\nfunction notEqual(a, b) {\n  return a !== b;\n}\n\nfunction greaterThan(a, b) {\n  return a > b;\n}\n\nfunction lessThan(a, b) {\n  return a < b;\n}\n\nfunction greaterThanEqual(a, b) {\n  return a >= b;\n}\n\nfunction lessThanEqual(a, b) {\n  return a <= b;\n}\n\nfunction andOperator(a, b) {\n  return Boolean(a && b);\n}\n\nfunction orOperator(a, b) {\n  return Boolean(a || b);\n}\n\nfunction inOperator(a, b) {\n  return contains(b, a);\n}\n\nfunction sinh(a) {\n  return ((Math.exp(a) - Math.exp(-a)) / 2);\n}\n\nfunction cosh(a) {\n  return ((Math.exp(a) + Math.exp(-a)) / 2);\n}\n\nfunction tanh(a) {\n  if (a === Infinity) return 1;\n  if (a === -Infinity) return -1;\n  return (Math.exp(a) - Math.exp(-a)) / (Math.exp(a) + Math.exp(-a));\n}\n\nfunction asinh(a) {\n  if (a === -Infinity) return a;\n  return Math.log(a + Math.sqrt((a * a) + 1));\n}\n\nfunction acosh(a) {\n  return Math.log(a + Math.sqrt((a * a) - 1));\n}\n\nfunction atanh(a) {\n  return (Math.log((1 + a) / (1 - a)) / 2);\n}\n\nfunction log10(a) {\n  return Math.log(a) * Math.LOG10E;\n}\n\nfunction neg(a) {\n  return -a;\n}\n\nfunction not(a) {\n  return !a;\n}\n\nfunction trunc(a) {\n  return a < 0 ? Math.ceil(a) : Math.floor(a);\n}\n\nfunction random(a) {\n  return Math.random() * (a || 1);\n}\n\nfunction factorial(a) { // a!\n  return gamma(a + 1);\n}\n\nfunction isInteger(value) {\n  return isFinite(value) && (value === Math.round(value));\n}\n\nvar GAMMA_G = 4.7421875;\nvar GAMMA_P = [\n  0.99999999999999709182,\n  57.156235665862923517, -59.597960355475491248,\n  14.136097974741747174, -0.49191381609762019978,\n  0.33994649984811888699e-4,\n  0.46523628927048575665e-4, -0.98374475304879564677e-4,\n  0.15808870322491248884e-3, -0.21026444172410488319e-3,\n  0.21743961811521264320e-3, -0.16431810653676389022e-3,\n  0.84418223983852743293e-4, -0.26190838401581408670e-4,\n  0.36899182659531622704e-5\n];\n\n// Gamma function from math.js\nfunction gamma(n) {\n  var t, x;\n\n  if (isInteger(n)) {\n    if (n <= 0) {\n      return isFinite(n) ? Infinity : NaN;\n    }\n\n    if (n > 171) {\n      return Infinity; // Will overflow\n    }\n\n    var value = n - 2;\n    var res = n - 1;\n    while (value > 1) {\n      res *= value;\n      value--;\n    }\n\n    if (res === 0) {\n      res = 1; // 0! is per definition 1\n    }\n\n    return res;\n  }\n\n  if (n < 0.5) {\n    return Math.PI / (Math.sin(Math.PI * n) * gamma(1 - n));\n  }\n\n  if (n >= 171.35) {\n    return Infinity; // will overflow\n  }\n\n  if (n > 85.0) { // Extended Stirling Approx\n    var twoN = n * n;\n    var threeN = twoN * n;\n    var fourN = threeN * n;\n    var fiveN = fourN * n;\n    return Math.sqrt(2 * Math.PI / n) * Math.pow((n / Math.E), n) *\n      (1 + (1 / (12 * n)) + (1 / (288 * twoN)) - (139 / (51840 * threeN)) -\n      (571 / (2488320 * fourN)) + (163879 / (209018880 * fiveN)) +\n      (5246819 / (75246796800 * fiveN * n)));\n  }\n\n  --n;\n  x = GAMMA_P[0];\n  for (var i = 1; i < GAMMA_P.length; ++i) {\n    x += GAMMA_P[i] / (n + i);\n  }\n\n  t = n + GAMMA_G + 0.5;\n  return Math.sqrt(2 * Math.PI) * Math.pow(t, n + 0.5) * Math.exp(-t) * x;\n}\n\nfunction stringOrArrayLength(s) {\n  if (Array.isArray(s)) {\n    return s.length;\n  }\n  return String(s).length;\n}\n\nfunction hypot() {\n  var sum = 0;\n  var larg = 0;\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = Math.abs(arguments[i]);\n    var div;\n    if (larg < arg) {\n      div = larg / arg;\n      sum = (sum * div * div) + 1;\n      larg = arg;\n    } else if (arg > 0) {\n      div = arg / larg;\n      sum += div * div;\n    } else {\n      sum += arg;\n    }\n  }\n  return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n}\n\nfunction condition(cond, yep, nope) {\n  return cond ? yep : nope;\n}\n\n/**\n* Decimal adjustment of a number.\n* From @escopecz.\n*\n* @param {Number} value The number.\n* @param {Integer} exp  The exponent (the 10 logarithm of the adjustment base).\n* @return {Number} The adjusted value.\n*/\nfunction roundTo(value, exp) {\n  // If the exp is undefined or zero...\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math.round(value);\n  }\n  value = +value;\n  exp = -(+exp);\n  // If the value is not a number or the exp is not an integer...\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n    return NaN;\n  }\n  // Shift\n  value = value.toString().split('e');\n  value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n  // Shift back\n  value = value.toString().split('e');\n  return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n}\n\nfunction setVar(name, value, variables) {\n  if (variables) variables[name] = value;\n  return value;\n}\n\nfunction arrayIndex(array, index) {\n  return array[index | 0];\n}\n\nfunction max(array) {\n  if (arguments.length === 1 && Array.isArray(array)) {\n    return Math.max.apply(Math, array);\n  } else {\n    return Math.max.apply(Math, arguments);\n  }\n}\n\nfunction min(array) {\n  if (arguments.length === 1 && Array.isArray(array)) {\n    return Math.min.apply(Math, array);\n  } else {\n    return Math.min.apply(Math, arguments);\n  }\n}\n\nfunction arrayMap(f, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to map is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to map is not an array');\n  }\n  return a.map(function (x, i) {\n    return f(x, i);\n  });\n}\n\nfunction arrayFold(f, init, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to fold is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to fold is not an array');\n  }\n  return a.reduce(function (acc, x, i) {\n    return f(acc, x, i);\n  }, init);\n}\n\nfunction arrayFilter(f, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to filter is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to filter is not an array');\n  }\n  return a.filter(function (x, i) {\n    return f(x, i);\n  });\n}\n\nfunction stringOrArrayIndexOf(target, s) {\n  if (!(Array.isArray(s) || typeof s === 'string')) {\n    throw new Error('Second argument to indexOf is not a string or array');\n  }\n\n  return s.indexOf(target);\n}\n\nfunction arrayJoin(sep, a) {\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to join is not an array');\n  }\n\n  return a.join(sep);\n}\n\nfunction sign(x) {\n  return ((x > 0) - (x < 0)) || +x;\n}\n\nvar ONE_THIRD = 1/3;\nfunction cbrt(x) {\n  return x < 0 ? -Math.pow(-x, ONE_THIRD) : Math.pow(x, ONE_THIRD);\n}\n\nfunction expm1(x) {\n  return Math.exp(x) - 1;\n}\n\nfunction log1p(x) {\n  return Math.log(1 + x);\n}\n\nfunction log2(x) {\n  return Math.log(x) / Math.LN2;\n}\n\nfunction Parser(options) {\n  this.options = options || {};\n  this.unaryOps = {\n    sin: Math.sin,\n    cos: Math.cos,\n    tan: Math.tan,\n    asin: Math.asin,\n    acos: Math.acos,\n    atan: Math.atan,\n    sinh: Math.sinh || sinh,\n    cosh: Math.cosh || cosh,\n    tanh: Math.tanh || tanh,\n    asinh: Math.asinh || asinh,\n    acosh: Math.acosh || acosh,\n    atanh: Math.atanh || atanh,\n    sqrt: Math.sqrt,\n    cbrt: Math.cbrt || cbrt,\n    log: Math.log,\n    log2: Math.log2 || log2,\n    ln: Math.log,\n    lg: Math.log10 || log10,\n    log10: Math.log10 || log10,\n    expm1: Math.expm1 || expm1,\n    log1p: Math.log1p || log1p,\n    abs: Math.abs,\n    ceil: Math.ceil,\n    floor: Math.floor,\n    round: Math.round,\n    trunc: Math.trunc || trunc,\n    '-': neg,\n    '+': Number,\n    exp: Math.exp,\n    not: not,\n    length: stringOrArrayLength,\n    '!': factorial,\n    sign: Math.sign || sign\n  };\n\n  this.binaryOps = {\n    '+': add,\n    '-': sub,\n    '*': mul,\n    '/': div,\n    '%': mod,\n    '^': Math.pow,\n    '||': concat,\n    '==': equal,\n    '!=': notEqual,\n    '>': greaterThan,\n    '<': lessThan,\n    '>=': greaterThanEqual,\n    '<=': lessThanEqual,\n    and: andOperator,\n    or: orOperator,\n    'in': inOperator,\n    '=': setVar,\n    '[': arrayIndex\n  };\n\n  this.ternaryOps = {\n    '?': condition\n  };\n\n  this.functions = {\n    random: random,\n    fac: factorial,\n    min: min,\n    max: max,\n    hypot: Math.hypot || hypot,\n    pyt: Math.hypot || hypot, // backward compat\n    pow: Math.pow,\n    atan2: Math.atan2,\n    'if': condition,\n    gamma: gamma,\n    roundTo: roundTo,\n    map: arrayMap,\n    fold: arrayFold,\n    filter: arrayFilter,\n    indexOf: stringOrArrayIndexOf,\n    join: arrayJoin\n  };\n\n  this.consts = {\n    E: Math.E,\n    PI: Math.PI,\n    'true': true,\n    'false': false\n  };\n}\n\nParser.prototype.parse = function (expr) {\n  var instr = [];\n  var parserState = new ParserState(\n    this,\n    new TokenStream(this, expr),\n    { allowMemberAccess: this.options.allowMemberAccess }\n  );\n\n  parserState.parseExpression(instr);\n  parserState.expect(TEOF, 'EOF');\n\n  return new Expression(instr, this);\n};\n\nParser.prototype.evaluate = function (expr, variables) {\n  return this.parse(expr).evaluate(variables);\n};\n\nvar sharedParser = new Parser();\n\nParser.parse = function (expr) {\n  return sharedParser.parse(expr);\n};\n\nParser.evaluate = function (expr, variables) {\n  return sharedParser.parse(expr).evaluate(variables);\n};\n\nvar optionNameMap = {\n  '+': 'add',\n  '-': 'subtract',\n  '*': 'multiply',\n  '/': 'divide',\n  '%': 'remainder',\n  '^': 'power',\n  '!': 'factorial',\n  '<': 'comparison',\n  '>': 'comparison',\n  '<=': 'comparison',\n  '>=': 'comparison',\n  '==': 'comparison',\n  '!=': 'comparison',\n  '||': 'concatenate',\n  'and': 'logical',\n  'or': 'logical',\n  'not': 'logical',\n  '?': 'conditional',\n  ':': 'conditional',\n  '=': 'assignment',\n  '[': 'array',\n  '()=': 'fndef'\n};\n\nfunction getOptionName(op) {\n  return optionNameMap.hasOwnProperty(op) ? optionNameMap[op] : op;\n}\n\nParser.prototype.isOperatorEnabled = function (op) {\n  var optionName = getOptionName(op);\n  var operators = this.options.operators || {};\n\n  return !(optionName in operators) || !!operators[optionName];\n};\n\n/*!\n Based on ndef.parser, by Raphael Graf(r@undefined.ch)\n http://www.undefined.ch/mparser/index.html\n\n Ported to JavaScript and modified by Matthew Crumley (email@matthewcrumley.com, http://silentmatt.com/)\n\n You are free to use and modify this code in anyway you find useful. Please leave this comment in the code\n to acknowledge its original source. If you feel like it, I enjoy hearing about projects that use my code,\n but don't feel like you have to let me know or ask permission.\n*/\n\n// Backwards compatibility\nvar index = {\n  Parser: Parser,\n  Expression: Expression\n};\n\nexport default index;\nexport { Expression, Parser };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}